{"version":3,"sources":["logo.svg","Constants/AuthenticationConstant.js","Tools/RequestTool.js","Services/AuthenticationService.js","Tools/History.js","Actions/AuthenticationAction.js","Pages/LoginPage.js","Constants/EducationConstant.js","Services/EducationService.js","Actions/EducationAction.js","Reducers/EducationReducer.js","Pages/AddEducation.js","Components/Modal.js","Pages/EducationList.js","Components/EducationPage.js","Constants/MarketConstant.js","Services/MarketService.js","Actions/MarketAction.js","Pages/AddMarket.js","Actions/MarketItemAction.js","Pages/AddMarketItem.js","Pages/MarketItemUpdate.js","Pages/MarketItemList.js","Components/MarketPage.js","Constants/UserConstant.js","Services/UserService.js","Actions/UserAction.js","Pages/ListMyCourses.js","Pages/UserMarketItems.js","Components/Nav.js","Pages/HomePage.js","Components/PrivateRoute.js","App.js","Reducers/AuthenticationReducer.js","Reducers/MarketReducer.js","Reducers/MarketItemReducer.js","Reducers/UserReducer.js","Reducers/RootReducer.js","Tools/Store.js","index.js"],"names":["HandleResponse","_promise","then","_response","ok","json","status","window","location","href","Success","Promise","reject","statusText","RequestTool","_url","fetch","method","headers","localStorage","getItem","_data","body","JSON","stringify","AuthenticationService","_username","_password","History","createBrowserHistory","_dispatch","type","Constant","_item","success","setItem","data","user","id","token","Payload","push","console","log","toast","error","catch","_error","clear","LoginComponent","props","state","Username","Password","Login","process","HandleChange","e","target","name","value","setState","HandlePress","key","Logout","className","title","hintText","floatingLabelText","onChange","this","label","primary","onClick","Component","LoginPage","connect","_state","LoginRequest","AuthenticationReducer","_user","AuthenticationAction","EducationService","_courseId","Fail","exception","Exception","_value","_e","_items","_course","_ex","initialState","Currentcourses","Data","Error","Loading","AddCourse","UpdatedCourse","AddUserToCourse","GetAllUsers","AddEducationComp","StartDate","FinishDate","Subject","Add","warning","_newEducation","prevProps","isAdded","style","padding","Grid","container","spacing","alignItems","item","variant","fullWidth","InputLabelProps","shrink","defaultValue","autoFocus","margin","Button","marginTop","color","AddEducation","EducationReducer","_ownProps","_newCourse","EducationAction","GetCurrentCourse","Modal","handleClose","show","children","showHideClassName","size","edge","EducationListComponent","GetAllJoinUsers","CourseId","render","map","TableRow","TableCell","align","username","educationSubject","MentorName","length","mentorName","TableContainer","paddingLeft","component","Paper","Table","TableHead","float","marginLeft","TableBody","EducationList","_id","EducationComponent","updateValue","NewCourse","showModal","hideModal","hideItemListModal","showItemListModal","Id","mentorAdd","addedMentor","startDate","finishDate","subject","MentorId","swal","text","icon","buttons","_res","WillBeMentor","joinCourse","_userId","EducationId","UserId","JoinCourse","bind","courses","maxHeight","overflow","Container","overflowY","height","aria-label","IconButton","display","green","course","buttonMentor","mentorId","ListItem","ListItemAvatar","Avatar","ListItemText","secondary","toString","slice","EducationPage","MarketService","AddMarketComponent","Description","newMarketList","AddMarket","_newMarketList","MarketAction","_marketId","AddMarketItemComponent","request","count","addState","Item","Count","MarketId","AddMarketItem","GetMarketById","MarketItem","disabled","description","MarketReducer","AddedMarketItem","MarketItemReducer","MarketItemAction","MarketItemUpdateComponent","loaded","Update","updateState","UpdateItem","GetItem","ItemId","MarketItemById","MarketItemUpdate","ItemList","showEditModal","_marketItemId","hideEditModal","GetAllItem","AllItem","button","userId","parseInt","scope","marketName","MarketItemList","MarketComponent","showAddModal","_panel","PanelId","hideAddModal","showAddItemModal","hideAddItemModal","GetCurrentMarketList","CurrentMarketList","AddedMarketList","markets","market","MarketPage","UserService","_userid","Constants","ListMyCoursesComponent","removeCourse","RemoveCourse","GetCourses","UserCourses","startIcon","ListMyCourses","UserReducer","UserAction","UserMarketItemsComps","removeItem","RemoveMarket","GetMarketItems","UserMarketItems","requestUserName","NavbarComps","showCourses","showMarketItems","renderMarkerts","renderCourses","showMyCourses","hideMyCourses","showMyMarketItems","hideMyMarketItems","logout","GetUser","User","undefined","Navbar","bg","expand","Brand","marginRight","Toggle","aria-controls","Collapse","Nav","NavDropdown","Divider","NavBar","HomePage","PrivateRoute","rest","to","pathname","from","App","_props","history","exact","path","listen","action","parse","_initialState","UpdatedItem","combineReducers","_action","x","filter","Store","createStore","RootReducer","applyMiddleware","thunkMiddleware","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.3dac444c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default {\r\n    LoginFail:'LoginFail',\r\n    LoginSuccess:'LoginSuccess',\r\n    LoginRequest:'LoginRequest',\r\n    Logout:'Logout'\r\n};","\r\nconst API_URL=\"http://live.basarsoft.com.tr/egba/api/api\";\r\n\r\nconst GetRequest=(_url) => {\r\n    \r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method:'get',\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem('token_')\r\n                },\r\n            }\r\n        )\r\n    );\r\n\r\n\r\n}\r\n\r\nconst PostRequest=(_url,_data) =>{\r\n\r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method:'post',\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem(\"token_\")\r\n                },\r\n                body:JSON.stringify(_data)\r\n            }));\r\n}\r\n\r\n\r\nconst PutRequest = (_url, _data) => {\r\n\r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem(\"token_\")\r\n                },\r\n                body: JSON.stringify(_data)\r\n            }));\r\n}\r\n\r\n\r\nconst DeleteRequest=(_url,_data)=>{\r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method:'delete',\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem(\"token_\")\r\n                },\r\n                body:JSON.stringify(_data)\r\n            }));\r\n}\r\n\r\n\r\nconst HandleResponse= (_promise) => {\r\n    return _promise.\r\n        then(_response => {\r\n            if(!_response.ok){\r\n                if(_response.status===401){\r\n                     window.location.href='/login';\r\n                    return {Success: false};\r\n            }\r\n            return Promise.reject(_response.statusText);\r\n        }\r\n        return _response.json();\r\n\r\n    });\r\n}\r\n\r\nexport const RequestTool={ GetRequest, PostRequest,PutRequest,DeleteRequest,API_URL }","import {RequestTool} from '../Tools/RequestTool';\r\n\r\n\r\n\r\nconst Login = (_username ,_password) => RequestTool.PostRequest( RequestTool.API_URL+ \"/login/validate\", //url kısmı\r\n    {\r\n        //data kısmı\r\n        \"username\":_username,\r\n        \"password\":_password\r\n    });\r\n\r\n    export const AuthenticationService= { Login };\r\n\r\n    //var _UserApiUrl = \"https://localhost:6061\"\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const History = createBrowserHistory();","import { toast } from 'react-toastify';\r\nimport Constant from '../Constants/AuthenticationConstant';\r\nimport {AuthenticationService} from '../Services/AuthenticationService';\r\nimport { History } from '../Tools/History';\r\n\r\nfunction Fail() {return {type:Constant.LoginFail};}\r\nfunction Request() {return{type:Constant.LoginRequest};}\r\n\r\n\r\nconst Login=(_username,_password) => {\r\n    return _dispatch => {\r\n     _dispatch(Request());\r\n\r\n    AuthenticationService.Login(_username,_password).\r\n        then(_response => {\r\n            if(!_response.success){\r\n                toast.error(\"Kullanıcı Bulunamadı\");\r\n                return;\r\n            }\r\n\r\n            localStorage.setItem('user_',_response.data.user.id);\r\n            localStorage.setItem('token_',_response.data.token);\r\n            _dispatch(Success(_response.data.user));\r\n            History.push(\"/egba/web/\");\r\n            console.log(\"Giriş yapılıyor\");\r\n            \r\n        }).\r\n        catch(_error => {\r\n            console.log(_error);\r\n            _dispatch(Fail());\r\n    });\r\n\r\n};\r\nfunction Success(_item) { return {type:Constant.LoginSuccess,Payload:_item};}\r\n}\r\nconst Logout =()=>{\r\n    localStorage.clear(\"user_\");\r\n    return {type:Constant.Logout};\r\n}\r\n\r\nexport default { Login, Logout}\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AuthenticationAction from '../Actions/AuthenticationAction';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport TextField from 'material-ui/TextField';\r\n\r\n\r\nclass LoginComponent extends Component{\r\n    state={\r\n        Username:'',\r\n        Password:''\r\n    };\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.props.Logout();\r\n    }\r\n    Login= () => {  \r\n        console.log(process.env);\r\n        const {Username , Password}=this.state;\r\n       \r\n        if(!Username || !Password) {\r\n            console.log(\"Kullanıcı veya şifre girilmedi\");\r\n            return;\r\n        }\r\n        this.props.Login(Username,Password); //button elementindeki onClick event ı tetiklendikten sonra çalışacak metot\r\n    }\r\n\r\n    HandleChange=(e)=>{ // inputlardaki onchange eventını ortak işlemleri için yazıldı.\r\n        const {name , value}=e.target;\r\n        \r\n        this.setState({ [name]:value }); \r\n        //console.log(name+' '+ value);// statelere kullanıcı ve şifreler her çağrıldığında ekleniyor.\r\n    }\r\n\r\n    HandlePress=(e)=>{ // enter tuşuna basıldıktan sonra giriş için\r\n        if(e.key==='Enter'){\r\n            this.Login();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"formdiv\">\r\n            <MuiThemeProvider>\r\n              <div >\r\n              <AppBar \r\n                 title=\"Giriş\"\r\n               />\r\n               <TextField\r\n               type=\"text\"\r\n                 name=\"Username\"\r\n                 hintText=\"Enter your Email\"\r\n                 floatingLabelText=\"Email\"\r\n                 onChange ={this.HandleChange}\r\n                 \r\n                 />\r\n               <br/>\r\n                 <TextField\r\n                  name=\"Password\"\r\n                   type=\"password\"\r\n                   hintText=\"Enter your Password\"\r\n                   floatingLabelText=\"Password\"\r\n                   onChange = {this.HandleChange}\r\n                   />\r\n                 <br/>\r\n                 <RaisedButton label=\"Giriş Yap\" primary={true} className=\"form__custom-button\"  onClick={this.Login}/>\r\n             </div>\r\n             </MuiThemeProvider>\r\n          </div>\r\n        )\r\n\r\n    }\r\n        \r\n    \r\n\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { LoginRequest} = _state.AuthenticationReducer;\r\n    return {LoginRequest};\r\n}\r\n\r\nconst MapDispatchToProps= _dispatch=>{\r\n    return{\r\n        Login:(_user,_password)=> _dispatch(AuthenticationAction.Login(_user,_password)),\r\n        Logout: ()=> _dispatch(AuthenticationAction.Logout())\r\n    }\r\n\r\n}\r\nexport const LoginPage=connect(MapStateToProps,MapDispatchToProps)(LoginComponent);","export default  {\r\n    GetCurrentCourse:'GetCurrentCourse',\r\n    GetCurrentCourseSuccess: 'GetCurrentCourseSuccess',\r\n    GetCurrentCourseFail: 'GetCurrentcourseFail',\r\n    JoinCourse: 'JoinCourse',\r\n    WillBeMentor:'WillBeMentor',\r\n    WillBeMentorSuccess:'WillBeMentorSuccess',\r\n    AddCourseRequest:'AddCourseRequest',\r\n    AddCourseSuccess:'AddCourseSuccess',\r\n    AddCourseFail:'AddCourseFail',\r\n    JoinCourseSuccess:'JoinCourseSuccess',\r\n    GetAllJoinUsers:'GetAllJoinUsers'\r\n}\r\n","import {RequestTool} from '../Tools/RequestTool';\r\n\r\n\r\n\r\nconst GetAll= () =>\r\n    RequestTool.GetRequest(RequestTool.API_URL+\"/Education/GetAll\");\r\n\r\nconst Add= (_item) => RequestTool.PostRequest(RequestTool.API_URL+\"/Education/Add\",_item);\r\n\r\nconst Update=(_item) => RequestTool.PutRequest(RequestTool.API_URL+\"/Education/Update\",_item);\r\n\r\nconst AddUser=(_item) => RequestTool.PostRequest(RequestTool.API_URL+\"/JoinEducation/Add\",_item);\r\n\r\nconst GetAllUsers=(_courseId) => RequestTool.GetRequest(RequestTool.API_URL+\"/JoinEducation/GetAll/\"+_courseId);\r\n\r\nexport const EducationService= {GetAll,Add,Update,AddUser,GetAllUsers}","import Constant from '../Constants/EducationConstant';\r\nimport { EducationService } from '../Services/EducationService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GetCurrentCourse = () =>{\r\n    return _dispatch => {\r\n        EducationService.GetAll().\r\n            then(_response => {\r\n                if(!_response.success){\r\n                    _dispatch(Fail(_response.exception));\r\n                    toast.error(_response.Exception);\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n               \r\n               \r\n            }).\r\n            catch(_e=>{\r\n                console.log(\"Kurslar getirilemedi\");\r\n                _dispatch(Fail(\"Kurslar getirilemedi\"));\r\n\r\n            });\r\n    };\r\n    function Success(_value) {return {type:Constant.GetCurrentCourseSuccess,Payload: _value};}\r\n    function Fail(_items) {return{type:Constant.GetCurrentCourseFail, Payload:_items};}\r\n}\r\n\r\nconst Add=(_course) =>{\r\n    return _dispatch =>{\r\n        EducationService.Add(_course).\r\n            then(_response=> {\r\n                if(!_response.success){\r\n                    _dispatch(Fail(_response.exception));\r\n                    console.log(_response.exception);\r\n                    return;\r\n                }\r\n                 \r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Kurs eklendi\")\r\n\r\n            }).\r\n            catch(_ex=>{\r\n                _dispatch(Fail(\"Kurs Eklenemedi\"));\r\n                toast.error(\"Kurs eklendi.\");\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constant.AddCourseSuccess,Payload:_item};}\r\n    function Fail(_item) {return {type:Constant.AddCourseFail,Payload:_item};}\r\n}\r\n\r\nconst WillBeMentor=(_course)=>{\r\n    return _dispatch =>{\r\n        EducationService.Update(_course).\r\n            then(_response =>{\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"İlgili kursa mentor olundu.\");\r\n\r\n\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    }\r\n\r\n    function Success(_item) {return {type:Constant.WillBeMentorSuccess,Payload:_item};}\r\n}\r\n\r\nconst JoinCourse=(_item)=>{\r\n    return _dispatch =>{\r\n        EducationService.AddUser(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n                    toast.error(\"Kullanıcı kursa kayıt yaptıramadı\");\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Kursa kayıt yapıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n   \r\n    }\r\n function Success(_item) {return {type:Constant.JoinCourseSuccess,Payload:_item};}\r\n}\r\n\r\nconst GetAllJoinUsers=(_courseId)=>{\r\n    return _dispatch =>{\r\n        EducationService.GetAllUsers(_courseId).\r\n            then(_response=>{\r\n                if(!_response){\r\n                    toast.error(\"Kursa kayıt yaptıranlar getirilmedi.\");\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Kullanıcılar getirildi\");\r\n            }).\r\n            catch(_e=>{\r\n\r\n            });\r\n    }\r\n    function Success(_item) {return{ type:Constant.GetAllJoinUsers, Payload:_item};}\r\n}\r\nexport default { GetCurrentCourse,Add,WillBeMentor,JoinCourse,GetAllJoinUsers}","import Constant from '../Constants/EducationConstant';\r\n\r\nconst initialState = {\r\n    Currentcourses:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    AddCourse:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n\r\n    UpdatedCourse:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n\r\n    },\r\n    AddUserToCourse:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    GetAllUsers:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    }\r\n\r\n}\r\n\r\nexport default function EducationReducer(state = initialState,_action) {\r\n    switch (_action.type) {\r\n\r\n    case Constant.GetCurrentCourse:\r\n        return { \r\n            ...state,\r\n             Currentcourses:{\r\n                 Data:null,\r\n                 Error:null,\r\n                 Loading:true\r\n             }\r\n        };\r\n    \r\n    case Constant.GetCurrentCourseSuccess:\r\n        return {\r\n            ...state,\r\n            Currentcourses:{\r\n                Data:_action.Payload,\r\n                Error:null,\r\n                Loading:false\r\n            }\r\n        };\r\n\r\n        case Constant.GetCurrentCourseFail:\r\n            return {\r\n                ...state,\r\n                Currentcourses:{\r\n                    Data:null,\r\n                    Error:_action.Payload,\r\n                    Loading:false\r\n                }\r\n            };\r\n    \r\n\r\n    case Constant.AddCourseRequest:\r\n        return{\r\n            ...state,\r\n            AddCourse:{\r\n                Data:null,\r\n                Error:null,\r\n                Loading:true\r\n            }\r\n        };                                                \r\n    \r\n        case Constant.AddCourseSuccess:\r\n            return {\r\n                ...state,\r\n                AddCourse:{\r\n                    Data:_action.Payload,\r\n                    Error: null,\r\n                    Loading:false\r\n                },\r\n                Currentcourses:{\r\n                    Data:[...state.Currentcourses.Data,_action.Payload],\r\n                    Error:null,\r\n                    Loading:false\r\n                }\r\n            };\r\n        \r\n        case Constant.AddCourseFail:\r\n            return {\r\n                ...state,\r\n                AddCourse:{\r\n                    Data:null,\r\n                    Error:_action.Payload,\r\n                    Loading:false\r\n                }\r\n            };\r\n            case Constant.WillBeMentorSuccess:\r\n                return { \r\n                    ...state,\r\n                     UpdatedCourse:{\r\n                         Data:_action.Payload,\r\n                         Error:null,\r\n                         Loading:false\r\n                     }\r\n                };\r\n\r\n            case Constant.JoinCourseSuccess:\r\n                return{\r\n                    ...state,\r\n                    AddUserToCourse:{\r\n                        Data:_action.Payload,\r\n                        Error:null,\r\n                        Loading:false\r\n                    }\r\n                };\r\n            \r\n            case Constant.GetAllJoinUsers:\r\n                return {\r\n                    ...state,\r\n                    GetAllUsers:{\r\n                        Data:_action.Payload,\r\n                        Error:null,\r\n                        Loading:false\r\n                    }\r\n                };\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport EducationAction from '../Actions/EducationAction';\r\nimport EducationReducer from '../Reducers/EducationReducer';\r\nimport '../index.css';\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nclass AddEducationComp extends Component {\r\n\r\n    state = {\r\n        StartDate: \"\",\r\n        FinishDate: \"\",\r\n        Subject: \"\",   \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.isAdded!==this.props.isAdded){\r\n            this.setState(\r\n                {\r\n                    StartDate: \"\",\r\n                    FinishDate: \"\",\r\n                    Subject: \"\", \r\n                }\r\n            )\r\n        }\r\n      \r\n    }\r\n    \r\n\r\n    Add = () => {\r\n        const { StartDate, FinishDate, Subject } = this.state;\r\n\r\n        if (StartDate > FinishDate) {\r\n\r\n            toast.warning(\"Başlangıç tarihi bitiş tarihinden büyük olamaz\");\r\n            return;\r\n        }\r\n        if (!StartDate) {\r\n\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n        }\r\n\r\n        let _newEducation = {\r\n            StartDate,\r\n            FinishDate,\r\n            Subject,\r\n        }\r\n\r\n        this.setState({\r\n            StartDate: \"\",\r\n            FinishDate: \"\",\r\n            Subject: \"\",\r\n        });\r\n        \r\n        this.props.Add(_newEducation);\r\n    }\r\n\r\n    HandleChange = (_e) => {\r\n        const { name, value } = _e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    render() {\r\n        \r\n             return (\r\n            <div className=\"add-education\" style={{ padding: 50 }}>\r\n\r\n                <Grid container spacing={10} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            value = {this.state.StartDate}\r\n                            name=\"StartDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value = {this.state.FinishDate}\r\n                            name=\"FinishDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            defaultValue=\"\"\r\n                            onChange={this.HandleChange}\r\n                            name='Subject'\r\n                            value = {this.state.Subject}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açılacak Kurs Konusu\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        ) \r\n   \r\n      \r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n\r\n    const { AddCourse } = _state.EducationReducer;\r\n\r\n    return { AddCourse };\r\n\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        Add: (_newCourse) => _dispatch(EducationAction.Add(_newCourse)),\r\n        GetCurrentCourse: () => _dispatch(EducationAction.GetCurrentCourse()),\r\n\r\n    }\r\n}\r\n\r\nexport const AddEducation = connect(MapStateToProps, MapDispatchToProps)(AddEducationComp);\r\n","import '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Modal=({handleClose,show,children}) =>{\r\n    const showHideClassName=show ? \"modal display-block\" : \"model display-none\";\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className=\"modal-main\">\r\n                {children}\r\n                <Button  size=\"medium\" color=\"primary\" edge=\"end\" onClick={handleClose} fullWidth={true} variant=\"contained\"> Kapat</Button>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Modal;","\r\nimport React, { Component } from 'react'\r\nimport  EducationAction  from '../Actions/EducationAction';\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nclass EducationListComponent extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.GetAllJoinUsers(this.props.CourseId);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.CourseId !== this.props.CourseId) {\r\n            this.props.GetAllJoinUsers(this.props.CourseId);\r\n        }\r\n        if (prevProps.GetAllUsers) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {GetAllUsers}=this.props;\r\n\r\n        if(!GetAllUsers.Data){\r\n            return \"\";\r\n        }\r\n        const list_item = items => {\r\n           \r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n                        return (\r\n                            <TableRow style={{ marginTop:5 }}>\r\n                                <TableCell  align=\"center\">\r\n                                    {item.username}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\"> {item.educationSubject}</TableCell>\r\n                            </TableRow>\r\n                           \r\n\r\n                        )\r\n                })\r\n            );\r\n        }\r\n        const _items = list_item(GetAllUsers.Data);\r\n        let MentorName=\"- \";\r\n        if(GetAllUsers.Data.length>0){\r\n            MentorName=GetAllUsers.Data[0].mentorName;\r\n        }\r\n        return (\r\n            \r\n            <div style={{ padding: 30}}>\r\n                <TableContainer style={{paddingLeft:5} }component={Paper}>\r\n                    \r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow  style={{ float:'right'}} ><h4 style={{ marginLeft:10,color:\"#3B177C\"}}>Kayıt Yaptıranlar Kullanıcılar</h4></TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\"><h5 style={{ color:\"#3B177C\"}}> Kursa Katılan: </h5> </TableCell>\r\n                                <TableCell align=\"center\"><h5 style={{ color:\"#3B177C\"}}>Kayıt Yapılan Kurs: </h5></TableCell>\r\n                                \r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {_items}\r\n                        </TableBody>\r\n                        <hr></hr>\r\n                        <TableRow ><h5 style={{ float:'right'}}>Eğitimi verecek kişi:<span>{ MentorName}</span></h5></TableRow>\r\n                    </Table>\r\n                </TableContainer>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps=_state=>{\r\n    const { GetAllUsers } = _state.EducationReducer;\r\n    return {GetAllUsers};\r\n}\r\n\r\nconst MapDispatchToProps =(_dispatch, _ownProps) =>{\r\n    return {\r\n        GetAllJoinUsers:(_id) => _dispatch(EducationAction.GetAllJoinUsers(_id)),\r\n    };\r\n}\r\n\r\nexport const EducationList=connect(MapStateToProps,MapDispatchToProps)(EducationListComponent);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton, TableRow, Container, Button } from '@material-ui/core';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { AddEducation } from '../Pages/AddEducation';\r\nimport EducationAction from '../Actions/EducationAction';\r\nimport { connect } from 'react-redux';\r\nimport Modal from './Modal';\r\nimport swal from 'sweetalert';\r\nimport { EducationList }  from '../Pages/EducationList';\r\n\r\n\r\n\r\n\r\n\r\nclass EducationComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            showItemListModal: false,\r\n            Id: 0,\r\n            StartDate: '',\r\n            FinishDate: '',\r\n            Subject: '',\r\n            MentorId: 0,\r\n            UserId: 0,\r\n            isAdded: false,\r\n           \r\n\r\n\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n\r\n    }\r\n    updateValue = 1;\r\n    NewCourse = 0;\r\n\r\n    componentDidMount() {\r\n        this.props.GetCurrentCourse();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.Currentcourses.Data !== null && prevProps.Currentcourses.Data.length !== this.props.Currentcourses.Data.length) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showModal = () => {\r\n        this.setState({ show: true })\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ show: false })\r\n    }\r\n\r\n    hideItemListModal = () => {\r\n        this.setState({ showItemListModal: false })\r\n    }\r\n    showItemListModal = (_courseId,) => {\r\n        this.setState({ showItemListModal: true, Id: _courseId})\r\n    }\r\n\r\n    mentorAdd = (_course) => {\r\n        let _id = localStorage.getItem('user_');\r\n\r\n        let addedMentor = {\r\n            Id: _course.id,\r\n            StartDate: _course.startDate,\r\n            FinishDate: _course.finishDate,\r\n            Subject: _course.subject,\r\n            MentorId: _id\r\n        };\r\n        swal({\r\n            text: \"Kursa mentor olmak istiyor musunuz?\",\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.WillBeMentor(addedMentor);\r\n            }\r\n        })\r\n\r\n       \r\n        this.updateValue = 0;\r\n        this.setState({ isAdded: false })\r\n    }\r\n\r\n    joinCourse = (_userId, _courseId) => {\r\n\r\n        let joinCourse = {\r\n            EducationId: _courseId,\r\n            UserId: _userId\r\n        };\r\n        swal({\r\n            text: \"Kursa kayıt olmak istiyor musunuz?\",\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.JoinCourse(joinCourse);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { Currentcourses, AddCourse } = this.props;\r\n        if (!Currentcourses.Data) {\r\n            console.log(\"Data yok\");\r\n            return \" \";\r\n\r\n        }\r\n        if (AddCourse.Data && this.state.show) {\r\n            this.hideModal();\r\n\r\n            AddCourse.Data = null;\r\n        }\r\n\r\n\r\n\r\n        const element_courses = courses => {\r\n            return (\r\n\r\n                courses.map(course => {\r\n                    let buttonMentor;\r\n                    if (course.mentorId == null) {\r\n\r\n                        buttonMentor = <SchoolIcon onClick={() => this.mentorAdd(course)}></SchoolIcon>;;\r\n                    }\r\n                    else {\r\n                        buttonMentor = \"\";\r\n                    }\r\n\r\n                    return (\r\n                        <TableRow>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <FolderIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={course.subject}\r\n                                    secondary={course.startDate.toString().slice(0, 10) + \" - \" + course.finishDate.toString().slice(0, 10)}\r\n                                />\r\n                                <IconButton >\r\n                                    {buttonMentor}\r\n                                </IconButton>\r\n\r\n                                <IconButton edge=\"end\" aria-label=\"Add\" onClick={() => this.joinCourse(localStorage.getItem('user_'), course.id)} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <PersonAddIcon />\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"Add\" onClick={() => this.showItemListModal(course.id)}  style={{ display: 'block', margin: 'auto' }}>\r\n                                    <ListIcon />\r\n                                </IconButton>\r\n\r\n\r\n                            </ListItem>\r\n                        </TableRow>\r\n                    );\r\n                })\r\n\r\n            );\r\n        }\r\n\r\n\r\n        return (\r\n            <div style={{maxHeight: '100%', overflow: 'auto'}} >\r\n                <h3>Eğitim</h3>\r\n\r\n                {this.props.AddCourse.Data == null && (<Modal show={this.state.show} handleClose={this.hideModal}>\r\n                    <Container>\r\n                        <AddEducation CourseId={this.state.isAdded} />\r\n                    </Container>\r\n                </Modal>)}\r\n\r\n                {this.state.Id != 0  &&  (\r\n                    <Modal show={this.state.showItemListModal} handleClose={this.hideItemListModal}>\r\n                        <Container>\r\n                            <EducationList CourseId={this.state.Id} />\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                <TableContainer component={Paper} style={{overflowY:\"scroll\", height:620}}>\r\n                    <Table  aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n\r\n                                <IconButton className=\"float-right\" edge=\"end\" aria-label=\"Add\" onClick={this.showModal} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <AddIcon style={{ color: green[400] }} />\r\n                                </IconButton>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n                            {element_courses(Currentcourses.Data)}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { Currentcourses, AddCourse, AddUserToCourse } = _state.EducationReducer;\r\n    return { Currentcourses, AddCourse, AddUserToCourse };\r\n\r\n}\r\n\r\n\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetCurrentCourse: () => _dispatch(EducationAction.GetCurrentCourse()),\r\n        WillBeMentor: (_data) => _dispatch(EducationAction.WillBeMentor(_data)),\r\n        JoinCourse: (_data) => _dispatch(EducationAction.JoinCourse(_data))\r\n    }\r\n}\r\n\r\nexport const EducationPage = connect(MapStateToProps, MapDispatchToProps)(EducationComponent);\r\n\r\n","export default {\r\n    GetMarketListSuccess:'GetMarketListSuccess',\r\n    GetMarketListFail:'GetMakretListFail',\r\n    AddMarketListSuccess:'AddMarketListSuccess',\r\n    AddMarketListFail:'AddMarketListFail',\r\n    GetMarketItemByIdSuccess:'GetMarketItemByIdSuccess',\r\n    AddMarketItemSuccess:'AddMarketItemSuccess',\r\n    GetAllItemSuccess:'GetAllItemSuccess',\r\n    UpdateMarketItemSuccess:'UpdateMarketItemSuccess',\r\n    GetItemByIdSuccess:'GetItemByIdSuccess'\r\n}","import {RequestTool} from '../Tools/RequestTool';\r\n\r\nconst GetAll=() =>RequestTool.GetRequest(RequestTool.API_URL+\"/Market/GetAll\");\r\n\r\nconst Add=(_item) => RequestTool.PostRequest(RequestTool.API_URL+\"/Market/Add\",_item);\r\n\r\nconst GetById=(_item) =>RequestTool.GetRequest(RequestTool.API_URL+\"/Market/Get/\"+_item);\r\n\r\nconst AddMarketItem=(_item) => RequestTool.PostRequest(RequestTool.API_URL+\"/MarketItem/Add\",_item);\r\n\r\nconst GetAllItem=(_id) => RequestTool.GetRequest(RequestTool.API_URL+\"/MarketItem/GetAll/\"+_id);\r\n\r\nconst UpdateItem=(_data) => RequestTool.PutRequest(RequestTool.API_URL+\"/MarketItem/Update\",_data);\r\n\r\nconst GetItemById=(_id) => RequestTool.GetRequest(RequestTool.API_URL+\"/MarketItem/Get/\"+_id);\r\n\r\nexport const MarketService= {GetAll, Add,GetById,AddMarketItem,GetAllItem,UpdateItem,GetItemById}","import Constant from '../Constants/MarketConstant';\r\nimport{ MarketService } from '../Services/MarketService';\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\n\r\n\r\nconst GetCurrentMarketList =()=>{\r\n    return _dispatch =>{\r\n        MarketService.GetAll().\r\n        then(_response=>{\r\n            if(!_response.success){\r\n\r\n                _dispatch(Fail(\"Market Listeleri getirilmedi\"));\r\n            }\r\n            _dispatch(Success(_response.data));\r\n            ;\r\n        }).\r\n        catch(_ex=>{\r\n\r\n            _dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));\r\n\r\n        });\r\n    };\r\n\r\n    function Success(_item) {return {type:Constant.GetMarketListSuccess,Payload:_item};}\r\n    function Fail(_item) {return {type:Constant.GetMarketListFail,Payload:_item};}\r\n}\r\n\r\nconst Add =(_value) =>{\r\n    return _dispatch =>{\r\n        MarketService.Add(_value).\r\n        then(_response => {\r\n                if(!_response.success){\r\n\r\n                    _dispatch(Fail(\"Liste eklenemedi\"));\r\n                    toast.error(\"Market listesine eklenemedi.\");\r\n\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Market listesine eklendi.\");\r\n              \r\n               \r\n            }).\r\n            catch(_ex=>{\r\n                _dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));\r\n\r\n            });\r\n    };\r\n\r\n    function Success(_item) {return{type:Constant.AddMarketListSuccess,Payload:_item}; }\r\n\r\n    function Fail(_item) { return {type:Constant.AddMarketListFail,Payload:_item};  }\r\n\r\n\r\n}\r\n\r\nconst GetMarketById=(_id) =>{\r\n\r\n    return _dispatch =>{\r\n        MarketService.GetById(_id).\r\n        then(_response=>{\r\n            if(!_response.success){\r\n                console.log(\"İlgili item getirelemedi\");\r\n                return;\r\n            }\r\n            _dispatch(Success(_response.data));\r\n            toast.success(\"İlgili talep başarılı bir şekilde getirildi.\");\r\n\r\n        }).\r\n        catch(_ex=>{\r\n            console.log(\"Beklenmeyen bir hata oluştu\");\r\n        })\r\n    }\r\n\r\n    function Success(_item) {return { type:Constant.GetMarketItemByIdSuccess,Payload:_item}; }\r\n}\r\n\r\n\r\nexport default {GetCurrentMarketList,Add,GetMarketById}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketAction from '../Actions/MarketAction'\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport { toast } from 'react-toastify'\r\n\r\nclass AddMarketComponent extends Component {\r\n\r\n    state = {\r\n        Subject: '',\r\n        Description: '',\r\n        StartDate: '',\r\n        FinishDate: '',\r\n        UserId: null\r\n    }\r\n\r\n    Add = () => {\r\n\r\n        const { Subject, Description, StartDate, FinishDate, UserId } = this.state;\r\n\r\n        if (StartDate > FinishDate) {\r\n\r\n            toast.warning(\"Başlangıç tarihi bitiş tarihinden büyük olamaz\");\r\n            return;\r\n        }\r\n        if (!StartDate && !FinishDate && !Subject && !Description) {\r\n\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n        }\r\n\r\n\r\n        let newMarketList = {\r\n            Subject,\r\n            Description,\r\n            StartDate,\r\n            FinishDate,\r\n            UserId: localStorage.getItem(\"user_\")\r\n\r\n        }\r\n\r\n        this.setState({\r\n            Subject: '',\r\n            Description: '',\r\n            StartDate: '',\r\n            FinishDate: '',\r\n\r\n        })\r\n\r\n        this.props.Add(newMarketList);\r\n    }\r\n\r\n    HandleChange = (_e) => {\r\n\r\n        const { name, value } = _e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-market\" style={{ padding: 35 }}>\r\n\r\n                <Grid container spacing={10} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            value={this.state.StartDate}\r\n                            name=\"StartDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={this.state.FinishDate}\r\n                            name=\"FinishDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={this.state.Subject}\r\n                            onChange={this.HandleChange}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                             value={this.state.Description}\r\n                            onChange={this.HandleChange}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    return;\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n\r\n    return {\r\n        Add: (_newMarketList) => _dispatch(MarketAction.Add(_newMarketList))\r\n    }\r\n}\r\n\r\nexport const AddMarket = connect(MapStateToProps, MapDispatchToProps)(AddMarketComponent);","import Constant from '../Constants/MarketConstant';\r\nimport{ MarketService } from '../Services/MarketService';\r\n\r\nconst AddMarketItem =(_value) =>{\r\n    return _dispatch =>{\r\n        MarketService.AddMarketItem(_value).\r\n            then(_response =>{\r\n\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n\r\n    function Success(_item) { return {type:Constant.AddMarketItemSuccess, Payload:_item};}\r\n}\r\n\r\nconst GetAllItem=(_marketId) =>{\r\n    return _dispatch =>{\r\n        MarketService.GetAllItem(_marketId).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n\r\n    function Success(_item) {return {type:Constant. GetAllItemSuccess, Payload:_item};}\r\n\r\n}\r\n\r\nconst UpdateItem=(_item) =>{\r\n    return _dispatch =>{\r\n        MarketService.UpdateItem(_item).\r\n            then(_response =>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n    function Success(_data) {return {type:Constant.UpdateMarketItemSuccess, Payload:_data};}\r\n\r\n}\r\nconst GetItem=(_id)=>{\r\n    return _dispatch =>{\r\n        MarketService.GetItemById(_id).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n    function Success(_data) {return { type:Constant.GetItemByIdSuccess, Payload:_data};}\r\n}\r\nexport default {AddMarketItem,GetAllItem,UpdateItem,GetItem}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\nclass AddMarketItemComponent extends Component {\r\n\r\n    state = { \r\n        request: \"\",\r\n        count:\"\"\r\n     }\r\n\r\n    Add = () => {\r\n        const {request, count}=this.state;\r\n\r\n        if(!request && !count){\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n\r\n        }\r\n\r\n        let addState={\r\n            Item: this.state.request,\r\n            Count:this.state.count,\r\n            MarketId:this.props.MarketId,\r\n            UserId:localStorage.getItem(\"user_\")\r\n        }\r\n\r\n        this.props.AddMarketItem(addState);\r\n\r\n        console.log({ Item: this.state.request, MarketId: this.props.MarketId });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props. GetMarketById(this.props.MarketId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.MarketId !== this.props.MarketId) {\r\n            this.props. GetMarketById(this.props.MarketId);\r\n            this.setState({ request: \"\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { MarketItem} = this.props;\r\n\r\n        if (!MarketItem.Data) {\r\n            console.log(\"Data yok\");\r\n            return \"\";\r\n        }\r\n       \r\n        return (\r\n            <div className=\"add-marketlist\" style={{ padding: 70 }}>\r\n                <Grid container spacing={5} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItem.Data.startDate.toString().slice(0, 10)}\r\n                            fullWidth\r\n                            disabled={true}\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            name=\"StartDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={MarketItem.Data.finishDate.toString().slice(0, 10)}\r\n                            name=\"FinishDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField \r\n                        value={MarketItem.Data.subject}\r\n                            disabled={true}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItem.Data.username}\r\n                            name='Username'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Talebi Açan kişi\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItem.Data.description}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <TextField value={this.state.request}\r\n\r\n                            onChange={(_e) => this.setState({ request: _e.target.value })}\r\n                            name='Item'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"İstekler\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField value={this.state.count}\r\n\r\n                            onChange={(_e) => this.setState({ count: _e.target.value })}\r\n                            name='Count'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Adet\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n\r\n    const { MarketItem} = _state.MarketReducer;\r\n    const {AddedMarketItem} =_state.MarketItemReducer;\r\n    return { MarketItem,AddedMarketItem};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetMarketById: (_id) => _dispatch(MarketAction.GetMarketById(_id)),\r\n        AddMarketItem: (_data) => _dispatch(MarketItemAction.AddMarketItem(_data))\r\n    }\r\n}\r\n\r\nexport const AddMarketItem = connect(MapStateToProps, MapDispatchToProps)(AddMarketItemComponent);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport {toast} from 'react-toastify'\r\n\r\nclass MarketItemUpdateComponent extends Component {\r\n\r\n    state = {\r\n        request: \"\",\r\n        count: \"\",\r\n        loaded: false\r\n    }\r\n \r\n\r\n    componentDidMount() {\r\n\r\n        this.props.GetItem(this.props.ItemId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.ItemId !== this.props.ItemId) {\r\n\r\n            this.props.GetItem(this.props.ItemId);\r\n            this.setState({ request: \"\" });\r\n        }\r\n\r\n\r\n    }\r\n    \r\n\r\n    static getDerivedStateFromProps(props,state) {\r\n        // Any time the current user changes,\r\n        // Reset any parts of state that are tied to that user.\r\n        // In this simple example, that's just the email.\r\n        if (!state.loaded && props.MarketItemById && props.MarketItemById.Data) {\r\n\r\n          return {\r\n              loaded: true,\r\n                request: props.MarketItemById.Data.item,\r\n                count:props.MarketItemById.Data.count\r\n          };\r\n        }\r\n        return null;\r\n      }\r\n    Update = (_id) => {\r\n        const {request,count}=this.state;\r\n\r\n        if(!request && !count){\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n\r\n        }\r\n\r\n        let updateState = {\r\n            Id: _id,\r\n            Item: this.state.request,\r\n            Count: this.state.count,\r\n        }\r\n\r\n        this.props.UpdateItem(updateState);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { MarketItemById } = this.props;\r\n        if (!MarketItemById.Data) {\r\n            console.log(\"Data yok\");\r\n            return \"\";\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"update-marketlist\" style={{ padding: 70 }}>\r\n\r\n                <Grid container spacing={5} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.startDate.toString().slice(0, 10)}\r\n                            fullWidth\r\n                            disabled={true}\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            name=\"StartDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={MarketItemById.Data.finishDate.toString().slice(0, 10)}\r\n                            name=\"FinishDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.subject}\r\n                            disabled={true}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItemById.Data.username}\r\n                            name='Username'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Talebi Açan kişi\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItemById.Data.description}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.item}\r\n\r\n                            onChange={(_e) => this.setState({ request: _e.target.value })}\r\n                            name='Item'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"İstekler\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n\r\n                            value={this.state.count}\r\n\r\n                            onChange={(_e) => this.setState({ count: _e.target.value })}\r\n                            name='Count'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Adet\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={()=>this.Update(MarketItemById.Data.id)} color=\"primary\" variant=\"contained\"> Düzenle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { MarketItemById } = _state.MarketItemReducer;\r\n\r\n    return { MarketItemById };\r\n\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetItem: (_id) => _dispatch(MarketItemAction.GetItem(_id)),\r\n        UpdateItem: (_id) => _dispatch(MarketItemAction.UpdateItem(_id))\r\n\r\n    }\r\n}\r\nexport const MarketItemUpdate = connect(MapStateToProps, MapDispatchToProps)(MarketItemUpdateComponent);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '../Components/Modal';\r\nimport { Container } from '@material-ui/core';\r\nimport { MarketItemUpdate } from './MarketItemUpdate';\r\n\r\n\r\nclass ItemList extends Component {\r\n    state = {\r\n        Item: \"\",\r\n        Count: \"\",\r\n        showEditModal: false,\r\n        ItemId:-1\r\n\r\n    }\r\n\r\n    showEditModal = (_marketItemId) => {\r\n        this.setState({ showEditModal: true, ItemId:_marketItemId })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({ showEditModal: false })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.GetAllItem(this.props.MarketId);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.MarketId !== this.props.MarketId) {\r\n            this.props.GetAllItem(this.props.MarketId);\r\n        }\r\n        if (prevProps.AllItem) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n\r\n        const { AllItem } = this.props;\r\n        if (!AllItem.Data) {\r\n            return \" \";\r\n        }\r\n\r\n        const list_item = items => {\r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n\r\n                    let button;\r\n                    if (item.userId===parseInt(localStorage.getItem('user_'))){\r\n                        button=<Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => this.showEditModal(item.id)}>Düzenle</Button>;\r\n                    }\r\n                    else{\r\n                        button=\" \";\r\n                    }\r\n                        return (\r\n                            <TableRow >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {item.marketName}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\"> {item.item}</TableCell>\r\n                                <TableCell align=\"right\"> {item.count}</TableCell>\r\n                                <TableCell align=\"right\"> {item.username}</TableCell>\r\n                               \r\n\r\n                                <TableCell align=\"right\">{button}</TableCell>\r\n\r\n                            </TableRow>\r\n\r\n                        )\r\n                })\r\n            );\r\n        }\r\n\r\n        const _items = list_item(AllItem.Data);\r\n\r\n        return (\r\n\r\n            <div className=\"marketlist\" style={{ padding: 25 }}>\r\n\r\n                {this.state.ItemId != -1 && (\r\n                    <Modal show={this.state.showEditModal} handleClose={this.hideEditModal}>\r\n                        <Container>\r\n                            <MarketItemUpdate ItemId={this.state.ItemId}/>\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                <TableContainer component={Paper}>\r\n                    \r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Market</TableCell>\r\n                                <TableCell align=\"right\">Alınacaklar</TableCell>\r\n                                <TableCell align=\"right\">Adet</TableCell>\r\n                                <TableCell align=\"right\">İsteyen kişi</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {_items}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { AllItem } = _state.MarketItemReducer;\r\n    return { AllItem };\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n\r\n    return {\r\n        GetAllItem: (_id) => _dispatch(MarketItemAction.GetAllItem(_id))\r\n    };\r\n}\r\n\r\nexport const MarketItemList = connect(MapStateToProps, MapDispatchToProps)(ItemList);","import React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { AddMarket } from '../Pages/AddMarket';\r\nimport { AddMarketItem } from \"../Pages/AddMarketItem\";\r\nimport {MarketItemList} from \"../Pages/MarketItemList\";\r\nimport Modal from './Modal';\r\n\r\n\r\nimport { IconButton, TableRow, Container } from '@material-ui/core';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass MarketComponent extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showAddModal: false,\r\n            showAddItemModal: false,\r\n            Id: 0,\r\n            StartDate: '',\r\n            FinishDate: '',\r\n            Subject: '',\r\n            Description: '',\r\n            Id: 0,\r\n            MarketId: 0,\r\n            PanelId:0,\r\n        };\r\n     }\r\n\r\n    showAddModal = (_marketId,_panel) => {\r\n        this.setState({ showAddModal: true, MarketId: _marketId, PanelId:_panel})\r\n    }\r\n\r\n    hideAddModal = () => {\r\n        this.setState({ showAddModal: false })\r\n    }\r\n\r\n    showAddItemModal = () => {\r\n        this.setState({ showAddItemModal: true })\r\n    }\r\n\r\n    hideAddItemModal = () => {\r\n        this.setState({ showAddItemModal: false })\r\n    }\r\n    showItemListModal = (_marketId,_panel) => {\r\n        this.setState({ showItemListModal: true, MarketId: _marketId, PanelId:_panel })\r\n    }\r\n\r\n    hideItemListModal = () => {\r\n        this.setState({ showItemListModal: false })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.GetCurrentMarketList();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.CurrentMarketList.Data!==null && prevProps.CurrentMarketList.Data.length!==this.props.CurrentMarketList.Data.length) {\r\n            \r\n            this.render();\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { CurrentMarketList,AddedMarketList,AddedMarketItem} = this.props;\r\n\r\n        if (!CurrentMarketList.Data) {\r\n            console.log(\"Data yok\");\r\n            return \" \";\r\n\r\n        }\r\n\r\n        if (AddedMarketList.Data!==null && this.state.showAddItemModal) {\r\n            this.hideAddItemModal();\r\n            AddedMarketList.Data = null;\r\n        }\r\n        if (AddedMarketItem.Data==0 && this.state.showAddModal) {\r\n            this.hideAddModal();\r\n            AddedMarketItem.Data = null;\r\n        }\r\n\r\n        const item_market = markets => {\r\n            return (\r\n                markets.map(market => {\r\n                    return (\r\n                        <TableRow>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <StoreIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={market.subject}\r\n                                    secondary={market.description}\r\n                                />\r\n\r\n                                <IconButton aria-label=\"Add\" onClick={() => this.showItemListModal(market.id,1)} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <ListIcon />\r\n                                </IconButton>\r\n                                <IconButton  onClick={() => this.showAddModal(market.id,2)} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <PersonAddIcon />\r\n                                </IconButton>\r\n\r\n                            </ListItem>\r\n                        </TableRow>\r\n                    );\r\n\r\n                })\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Market</h3>\r\n\r\n                {this.state.MarketId != 0 && this.state.PanelId==2 && (\r\n                    <Modal show={this.state.showAddModal} handleClose={this.hideAddModal}>\r\n                        <Container>\r\n                            <AddMarketItem MarketId={this.state.MarketId} />\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                    {this.state.MarketId != 0 && this.state.PanelId==1 && (\r\n                    <Modal show={this.state.showItemListModal} handleClose={this.hideItemListModal}>\r\n                        <Container>\r\n                        <MarketItemList MarketId={this.state.MarketId}  />\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                <TableContainer  style={{overflowY:\"scroll\", height:620}}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <Modal show={this.state.showAddItemModal} handleClose={this.hideAddItemModal}>\r\n                                    <Container>\r\n                                        <AddMarket/>\r\n                                    </Container>\r\n                                </Modal>\r\n                                <IconButton className=\"float-right\" edge=\"end\" aria-label=\"Add\" onClick={this.showAddItemModal} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <AddIcon style={{ color: green[400] }} />\r\n                                </IconButton>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {item_market(CurrentMarketList.Data)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst MapStateToProps = _state => {\r\n\r\n    const { CurrentMarketList,AddedMarketList }=_state.MarketReducer;\r\n\r\n    const {AddedMarketItem} = _state.MarketItemReducer;\r\n\r\n    return { CurrentMarketList, AddedMarketList , AddedMarketItem};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetCurrentMarketList: () => _dispatch(MarketAction.GetCurrentMarketList())\r\n    }\r\n}\r\nexport const MarketPage = connect(MapStateToProps, MapDispatchToProps)(MarketComponent);\r\n","export default {\r\n    UserCoursesSuccess:'UserCoursesSuccess',\r\n    UserMarketItemsSuccess:'UserMarketItemsSuccess',\r\n    RemoveMarketItemSuccess:'RemoveMarketItemSuccess',\r\n    RemoveCourseSuccess:'RemoveCourseSuccess'\r\n}","import {RequestTool} from '../Tools/RequestTool';\r\n\r\n\r\nconst GetAllItems=(_userId) =>RequestTool.GetRequest(RequestTool.API_URL+\"/User/GetMarkets/\"+_userId);\r\n\r\nconst GetUser=(_id) =>RequestTool.GetRequest(RequestTool.API_URL+\"/User/Get/\"+_id);\r\n\r\nconst GetAllCourses=(_userid) =>RequestTool.GetRequest(RequestTool.API_URL+\"/User/GetCourses/\"+_userid);\r\n\r\nconst RemoveMarketItem=(_item) =>RequestTool.DeleteRequest(RequestTool.API_URL+\"/User/RemoveMarketItem\",_item);\r\n\r\nconst RemoveCourse=(_item) =>RequestTool.DeleteRequest(RequestTool.API_URL+\"/User/RemoveCourse\",_item);\r\n\r\nexport const UserService= {GetAllItems,GetUser,GetAllCourses,RemoveMarketItem,RemoveCourse}","import Constant from '../Constants/UserConstant';\r\nimport Constants from '../Constants/AuthenticationConstant';\r\nimport { UserService } from '../Services/UserService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GetMarketItems = (_userId) =>{\r\n    return _dispatch => {\r\n        UserService.GetAllItems(_userId).\r\n            then(_response =>{\r\n                if(!_response.success){\r\n                    _dispatch(Fail(_response.exception));\r\n                    toast.error(_response.Exception);\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Market listesi getirildi\");\r\n                \r\n               \r\n            }).\r\n            catch(_e=>{\r\n                \r\n\r\n            });\r\n    };\r\n    function Success(_value) {return {type:Constant.UserMarketItemsSuccess,Payload: _value};}\r\n    function Fail(_items) {return{type:Constant.UserMarketItemsSuccess, Payload:_items};}\r\n}\r\n\r\nconst GetCourses=(_userid) =>{\r\n    return _dispatch => {\r\n        UserService.GetAllCourses(_userid).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constant.UserCoursesSuccess, Payload:_item};}\r\n}\r\n\r\nconst GetUser=(_id) =>{\r\n    return _dispatch =>{\r\n        UserService.GetUser(_id).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constants.LoginSuccess,Payload:_item};}\r\n}\r\n\r\nconst RemoveMarket=(_item)=>{\r\n    return _dispatch =>{\r\n        UserService.RemoveMarketItem(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success())\r\n                toast.success(\"Market isteği kaldırıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success() {return {type:Constant.RemoveMarketItemSuccess,Payload:_item.id};}\r\n}\r\n\r\nconst RemoveCourse=(_item)=>{\r\n    return _dispatch =>{\r\n        UserService.RemoveCourse(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success())\r\n                toast.success(\"Kurs kaldırıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success() {return {type:Constant.RemoveCourseSuccess,Payload:_item.id};}\r\n}\r\n\r\nexport default{GetMarketItems,GetUser,GetCourses,RemoveMarket,RemoveCourse}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserAction from '../Actions/UserAction';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport swal from 'sweetalert';\r\n\r\nclass ListMyCoursesComponent extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.GetCourses(this.props.UserId);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.UserCourses.Data!==null && prevProps.UserCourses.Data.length!==this.props.UserCourses.Data.length) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    removeCourse=(_course)=>{\r\n        swal({\r\n            text: \"Kursu silmek istiyor musunuz?\"+ _course.id,\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.RemoveCourse(_course);\r\n             }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { UserCourses } = this.props;\r\n        if (UserCourses.Data == null) {\r\n            return \"\";\r\n        }\r\n        const list_item = items => {\r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n\r\n\r\n\r\n                    return (\r\n                        <TableRow >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {item.educationSubject}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\"> {item.startDate.toString().slice(0, 10)}</TableCell>\r\n                            <TableCell align=\"center\"> &nbsp;&nbsp;{item.finishDate.toString().slice(0, 10)}</TableCell>\r\n                            <TableCell align=\"center\"> {item.mentorName}</TableCell>\r\n                            <TableCell>  <Button  onClick={() => this.removeCourse( item)} variant=\"contained\" color=\"secondary\"startIcon={<DeleteIcon />}>Kaldır</Button></TableCell>\r\n\r\n                        </TableRow>\r\n\r\n                    )\r\n                })\r\n            );\r\n        }\r\n\r\n        const _items = list_item(UserCourses.Data);\r\n        return (\r\n            <div>\r\n                <div className=\"courselist\" style={{ padding: 25 }}>\r\n\r\n                    {/* {this.state.ItemId != -1 && (\r\n                        <Modal show={this.state.showEditModal} handleClose={this.hideEditModal}>\r\n                            <Container>\r\n                                <MarketItemUpdate ItemId={this.state.ItemId} />\r\n                            </Container>\r\n                        </Modal>)} */}\r\n\r\n                    <TableContainer component={Paper}>\r\n\r\n                        <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Kurs</TableCell>\r\n                                    <TableCell align=\"center\">Başlangıç</TableCell>\r\n                                    <TableCell align=\"center\"> Bitiş</TableCell>\r\n                                    <TableCell align=\"center\">Mentor</TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {_items}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst MapStateToProps = _state => {\r\n    const { UserCourses } = _state.UserReducer;\r\n    return { UserCourses };\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetCourses: (_userid) => _dispatch(UserAction.GetCourses(_userid)),\r\n        RemoveCourse:(_item)=> _dispatch(UserAction.RemoveCourse(_item))\r\n\r\n    }\r\n}\r\nexport const ListMyCourses = connect(MapStateToProps, MapDispatchToProps)(ListMyCoursesComponent);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserAction from '../Actions/UserAction';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport swal from 'sweetalert';\r\n\r\nclass UserMarketItemsComps extends Component {\r\n    componentDidMount() {\r\n        this.props.GetMarketItems(this.props.UserId);\r\n        this.render();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.UserMarketItems.Data!==null && prevProps.UserMarketItems.Data.length!==this.props.UserMarketItems.Data.length) {\r\n            this.render();\r\n        }\r\n    }\r\n  \r\n\r\n    removeItem=(item)=>{\r\n        swal({\r\n            text: \"Market isteğini silmek istiyor musunuz?\"+ item.id,\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.RemoveMarket(item)  }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { UserMarketItems } = this.props;\r\n        if (UserMarketItems.Data == null) {\r\n            return \"\";\r\n        }\r\n        const list_item = items => {\r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n\r\n                    let button;\r\n                    if (item.userId === parseInt(localStorage.getItem('user_'))) {\r\n                        button = <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => this.showEditModal(item.id)}>Düzenle</Button>;\r\n                    }\r\n                    else {\r\n                        button = \" \";\r\n                    }\r\n                    return (\r\n                        <TableRow >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {item.marketName}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\"> {item.item}</TableCell>\r\n                            <TableCell align=\"right\"> {item.count}</TableCell>\r\n                            <TableCell align=\"right\"> {item.requestUserName}</TableCell>\r\n\r\n\r\n                            <TableCell>  <Button  onClick={() => this.removeItem( item )} variant=\"contained\" color=\"secondary\"startIcon={<DeleteIcon />}>Kaldır</Button></TableCell>\r\n\r\n                        </TableRow>\r\n\r\n                    )\r\n                })\r\n            );\r\n        }\r\n\r\n        const _items = list_item(UserMarketItems.Data);\r\n        return (\r\n            <div>\r\n                <div className=\"marketlist\" style={{ padding: 25 }}>\r\n\r\n                    {/* {this.state.ItemId != -1 && (\r\n                        <Modal show={this.state.showEditModal} handleClose={this.hideEditModal}>\r\n                            <Container>\r\n                                <MarketItemUpdate ItemId={this.state.ItemId} />\r\n                            </Container>\r\n                        </Modal>)} */}\r\n\r\n                    <TableContainer component={Paper}>\r\n\r\n                        <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Market</TableCell>\r\n                                    <TableCell align=\"right\">Alınacaklar</TableCell>\r\n                                    <TableCell align=\"right\">Adet</TableCell>\r\n                                    <TableCell align=\"right\">Talebi Açan kişi</TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {_items}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MapStateToProps = _state => {\r\n\r\n    const { UserMarketItems,} = _state.UserReducer;\r\n\r\n    return { UserMarketItems };\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetMarketItems: (_userId) => _dispatch(UserAction.GetMarketItems(_userId)),\r\n        RemoveMarket:(_item) => _dispatch(UserAction.RemoveMarket(_item))\r\n    }\r\n}\r\n\r\nexport const UserMarketItems = connect(MapStateToProps, MapDispatchToProps)(UserMarketItemsComps);\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../Components/Modal';\r\nimport { Container } from '@material-ui/core';\r\nimport { ListMyCourses } from '../Pages/ListMyCourses';\r\nimport UserAction from '../Actions/UserAction';\r\nimport { UserMarketItems } from '../Pages/UserMarketItems';\r\nimport AuthenticationAction from '../Actions/AuthenticationAction';\r\n\r\nclass NavbarComps extends Component {\r\n\r\n    state={\r\n        showCourses:false,\r\n        showMarketItems:false,\r\n        renderMarkerts:false,\r\n        renderCourses:false\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.props.GetUser(localStorage.getItem(\"user_\"));\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(!prevProps.User){\r\n            this.props.GetUser(this.props.User.id);\r\n            this.render();\r\n        }\r\n    }\r\n    showMyCourses=(_user)=>{\r\n        if(_user){\r\n             this.setState({ showCourses: true,renderCourses:true })\r\n        }\r\n       \r\n    }\r\n    hideMyCourses = () => {\r\n            this.setState({ showCourses: false })\r\n    }\r\n\r\n    showMyMarketItems=(_user)=>{\r\n        if(_user){\r\n            this.setState({ showMarketItems: true,renderMarkerts:true })\r\n        }\r\n        \r\n    }\r\n    hideMyMarketItems = () => {\r\n        this.setState({ showMarketItems: false })\r\n    }\r\n\r\n\r\n    logout = () => {\r\n        swal({\r\n            text: \"Çıkış yapmak istiyor musunuz?\",\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.Logout();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {User}=this.props;\r\n        if(User==undefined){\r\n            return \"\";\r\n        }\r\n        return (\r\n            <div>\r\n                {this.state.renderCourses && (<Modal show={this.state.showCourses} handleClose={this.hideMyCourses}>\r\n                    <Container>\r\n                        <ListMyCourses UserId={localStorage.getItem(\"user_\")}/>\r\n                    </Container>\r\n                </Modal>)}\r\n\r\n                {this.state.renderMarkerts && (<Modal show={this.state.showMarketItems} handleClose={this.hideMyMarketItems}>\r\n                    <Container>\r\n                        <UserMarketItems UserId={localStorage.getItem(\"user_\")}/>\r\n                    </Container>\r\n                </Modal>)}\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">EGBA SİSTEM</Navbar.Brand>\r\n                   \r\n                    <h5 style={{ marginLeft:690, marginRight: 130 }}>Hoşgeldin {User.name ? User.name : \" \"}</h5>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                            \r\n\r\n                            <NavDropdown style={{ marginLeft: 575, marginRight: 30 }} title={User.name} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={()=>this.showMyCourses({User})}>Kurslarım</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={()=>this.showMyMarketItems({User})}>Market İsteklerim</NavDropdown.Item>\r\n                                \r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={() => this.logout()}>Çıkış Yap</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MapStateToProps= _state=>{\r\n    const {User}= _state.AuthenticationReducer;\r\n\r\n    return {User};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetUser : (_userId) => _dispatch(UserAction.GetUser(_userId)),\r\n        Logout:() =>_dispatch(AuthenticationAction.Logout())\r\n        \r\n    }\r\n}\r\n\r\nexport const NavBar=connect(MapStateToProps,MapDispatchToProps)(NavbarComps);\r\n","import React,{Component} from 'react';\r\nimport {EducationPage} from '../Components/EducationPage';\r\nimport {MarketPage} from '../Components/MarketPage';\r\nimport { Container } from '@material-ui/core';\r\nimport {NavBar} from '../Components/Nav.js';\r\nimport { AddEducation } from './AddEducation';\r\n\r\n\r\nexport class HomePage extends Component {\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"float-xl-left w-100 p-3\">\r\n                     <NavBar/>\r\n                </div>\r\n                \r\n                <Container>\r\n                \r\n                   \r\n               \r\n              <div className=\"float-xl-left w-50 p-3\">\r\n                  <EducationPage />\r\n              </div>\r\n                \r\n           <div className=\"float-xl-left w-50 p-3\">\r\n                <MarketPage />\r\n           </div>\r\n           \r\n            </Container>\r\n            \r\n            </div>\r\n           \r\n            \r\n        \r\n           \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n\r\n    <Route {...rest} render={props => (\r\n\r\n        localStorage.getItem('user_') ?\r\n            <Component {...props} />  :\r\n            <Redirect to={{ pathname: '/egba/web/login', state: { from: props.location } }} />\r\n    )} />\r\n)","import logo from './logo.svg';\nimport './App.css';\nimport { Router, Route, Switch, Redirect, withRouter, BrowserRouter } from 'react-router-dom';\nimport {LoginPage} from './Pages/LoginPage';\nimport { HomePage}  from './Pages/HomePage';\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { History } from './Tools/History';\nimport { AddEducation } from './Pages/AddEducation';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {PrivateRoute} from './Components/PrivateRoute';\n\nclass App extends Component {\n\n  constructor(_props) {\n    super(_props);\n    History.listen((location, action) => {\n    });\n\n}\nrender = ()=> {\n  return ( \n  <div>\n    <ToastContainer />\n    <Router history={History}>\n     \n    <Switch>\n      <Route exact path=\"/egba/web/login\" component={LoginPage} />\n      <PrivateRoute exact path=\"/egba/web/\" component={ HomePage} />\n      <PrivateRoute exact path={\"/egba/web/add_education\"} component={AddEducation}/>\n    </Switch>\n    </Router>\n  </div>\n  \n    \n  );\n}\n}\n\nconst MapStateToProps = _state => {\n\n  const { User } = _state.AuthenticationReducer;\n\n  return { User };\n}\n\nexport default connect(MapStateToProps, null)(App);","import Constant from '../Constants/AuthenticationConstant'\r\n\r\nlet _user=JSON.parse(localStorage.getItem('user_'));\r\n\r\nconst _initialState= _user? {User: _user}: {};\r\n\r\nexport default function AuthenticationReducer(_state=_initialState, _action){\r\n    switch(_action.type){\r\n        case Constant.LoginFail: \r\n            return { };\r\n        case Constant.LoginRequest:\r\n            return {LoginRequest:true};\r\n        case Constant.LoginSuccess:\r\n            return {User: _action.Payload};\r\n        case Constant.Logout:\r\n            return {User:null};\r\n        default:\r\n            return _state; \r\n        }\r\n}","import Constant from '../Constants/MarketConstant';\r\n\r\nconst initialState={\r\n    CurrentMarketList:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    AddedMarketList:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    MarketItem:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n\r\n    }\r\n  \r\n}\r\n\r\nexport default function MarketReducer(state=initialState,_action){\r\n\r\n    switch(_action.type){\r\n\r\n        case Constant.GetMarketListSuccess:\r\n            return{\r\n                ...state,\r\n                CurrentMarketList:{\r\n                    Data:_action.Payload,\r\n                    Error:null,\r\n                    Loading:false\r\n                },\r\n\r\n            }\r\n        \r\n            case Constant.GetMarketListFail:\r\n                return {\r\n                    ...state,\r\n                    CurrentMarketList:{\r\n                        Data:null,\r\n                        Error:_action.Payload,\r\n                        Loading:false\r\n                    }\r\n                }\r\n\r\n            case Constant.AddMarketListSuccess:\r\n                return {\r\n                    ...state,\r\n                    AddedMarketList:{\r\n                        Data:_action.Payload,\r\n                        Error:null,\r\n                        Loading:false\r\n                    },\r\n                    CurrentMarketList:{\r\n                        Data:[...state.CurrentMarketList.Data,_action.Payload],\r\n                        Error:null,\r\n                        Loading:false\r\n                    }\r\n                }\r\n\r\n            case Constant.AddMarketListFail:\r\n                return{\r\n                    ...state,\r\n                    AddedMarketList:{\r\n                        Data:null,\r\n                        Error:_action.Payload,\r\n                        Loading:false\r\n                    }\r\n                }\r\n\r\n            case Constant.GetMarketItemByIdSuccess:\r\n                return{\r\n                    ...state,\r\n                    MarketItem:{\r\n                        Data:_action.Payload,\r\n                        Error:null,\r\n                        Loading:false\r\n                    }\r\n                }\r\n            default:\r\n                return state\r\n\r\n    }\r\n\r\n}","import Constant from '../Constants/MarketConstant';\r\n\r\nconst initialState={\r\n    AddedMarketItem:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    AllItem:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    UpdatedItem:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    MarketItemById:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    }\r\n}\r\n\r\n\r\nexport default function MarketItemReducer(state=initialState,_action){\r\n\r\n    switch(_action.type){\r\n\r\n        case Constant.AddMarketItemSuccess:\r\n            return {\r\n                ...state,\r\n                AddedMarketItem:{\r\n                    Data:_action.Payload,\r\n                    Error:null,\r\n                    Loading:false\r\n                }\r\n            }\r\n\r\n        case Constant.GetAllItemSuccess:\r\n            return{\r\n                ...state,\r\n                AllItem:{\r\n                    Data:_action.Payload,\r\n                    Error:null,\r\n                    Loading:false\r\n                }\r\n            }\r\n        case Constant.UpdateMarketItemSuccess:\r\n            return{\r\n                ...state,\r\n                UpdatedItem:{\r\n                    Data:_action.Payload,\r\n                    Error:null,\r\n                    Loading:false\r\n                },\r\n                AllItem:{\r\n                    Data: state.AllItem.Data.map(x=>x.id !== _action.Payload.id ? x : {...x, ..._action.Payload}),\r\n                    Error:null,\r\n                    Loading:false\r\n                }\r\n            }\r\n        case Constant.GetItemByIdSuccess:\r\n            return{\r\n                ...state,\r\n                MarketItemById:{\r\n                    Data:_action.Payload,\r\n                    Error:null,\r\n                    Loading:false\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n}\r\n\r\n}","import Constant from '../Constants/UserConstant';\r\n\r\nconst initialState = {\r\n    UserCourses:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    },\r\n    UserMarketItems:{\r\n        Data:null,\r\n        Error:null,\r\n        Loading:false\r\n    }\r\n\r\n}\r\n\r\nexport default function UserReducer(state = initialState,_action) {\r\n    switch (_action.type) {\r\n\r\n    case Constant.UserCoursesSuccess:\r\n        return { \r\n            ...state,\r\n             UserCourses:{\r\n                 Data:_action.Payload,\r\n                 Error:null,\r\n                 Loading:true\r\n             }\r\n        };\r\n\r\n        case Constant.UserMarketItemsSuccess:\r\n        return { \r\n            ...state,\r\n            UserMarketItems:{\r\n                 Data:_action.Payload,\r\n                 Error:null,\r\n                 Loading:true\r\n             }\r\n        };\r\n\r\n        case Constant.RemoveMarketItemSuccess:\r\n            return{\r\n                ...state,\r\n                UserMarketItems:{\r\n                    Data:state.UserMarketItems.Data.filter(x=>x.id!==_action.Payload),\r\n                    Error:null,\r\n                    Loading:false\r\n                }\r\n            }\r\n\r\n            case Constant.RemoveCourseSuccess:\r\n                return{\r\n                    ...state,\r\n                    UserCourses:{\r\n                        Data:state.UserCourses.Data.filter(x=>x.id!== _action.Payload),\r\n                        Error:null,\r\n                        Loading:false\r\n                    }\r\n\r\n                }\r\n    \r\n    \r\n        \r\n        \r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AuthenticationReducer from './AuthenticationReducer';\r\nimport EducationReducer from '../Reducers/EducationReducer';\r\nimport MarketReducer from '../Reducers/MarketReducer';\r\nimport MarketItemReducer from '../Reducers/MarketItemReducer';\r\nimport UserReducer from '../Reducers/UserReducer';\r\n\r\nexport default combineReducers({\r\n    AuthenticationReducer,\r\n    EducationReducer,\r\n    MarketReducer,\r\n    MarketItemReducer,\r\n    UserReducer\r\n});","import { applyMiddleware, createStore } from 'redux';\r\nimport RootReducer from '../Reducers/RootReducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nexport const Store =createStore(RootReducer, applyMiddleware(thunkMiddleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { Store } from './Tools/Store'\n\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}