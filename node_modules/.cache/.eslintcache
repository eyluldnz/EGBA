[{"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\index.js":"1","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\App.js":"2","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\reportWebVitals.js":"3","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\LoginPage.js":"4","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\AuthenticationAction.js":"5","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\AuthenticationService.js":"6","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\AuthenticationConstant.js":"7","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Tools\\RequestTool.js":"8","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Tools\\Store.js":"9","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\RootReducer.js":"10","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\AuthenticationReducer.js":"11","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Tools\\History.js":"12","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\HomePage.js":"13","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\EducationReducer.js":"14","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\EducationConstant.js":"15","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\AddEducation.js":"16","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\EducationAction.js":"17","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\EducationService.js":"18","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\Modal.js":"19","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\AddMarket.js":"20","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\MarketAction.js":"21","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\MarketConstant.js":"22","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\MarketService.js":"23","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\MarketReducer.js":"24","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\AddMarketItem.js":"25","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\MarketItemAction.js":"26","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\EducationPage.js":"27","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\MarketPage.js":"28","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\MarketItemReducer.js":"29","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\MarketItemList.js":"30","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\MarketItemUpdate.js":"31","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\EducationList.js":"32","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\Nav.js":"33","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\ListMyCourses.js":"34","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\UserReducer.js":"35","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\UserConstant.js":"36","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\UserAction.js":"37","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\UserService.js":"38","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\UserMarketItems.js":"39","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\PrivateRoute.js":"40"},{"size":510,"mtime":1617356688689,"results":"41","hashOfConfig":"42"},{"size":1282,"mtime":1617371002637,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1612963461110,"results":"44","hashOfConfig":"42"},{"size":2860,"mtime":1613628672628,"results":"45","hashOfConfig":"42"},{"size":1287,"mtime":1617370537951,"results":"46","hashOfConfig":"42"},{"size":394,"mtime":1617372090425,"results":"47","hashOfConfig":"42"},{"size":137,"mtime":1612969180515,"results":"48","hashOfConfig":"42"},{"size":2054,"mtime":1617370561581,"results":"49","hashOfConfig":"42"},{"size":231,"mtime":1613629723516,"results":"50","hashOfConfig":"42"},{"size":489,"mtime":1617195473472,"results":"51","hashOfConfig":"42"},{"size":617,"mtime":1617193458298,"results":"52","hashOfConfig":"42"},{"size":97,"mtime":1613028490830,"results":"53","hashOfConfig":"42"},{"size":1003,"mtime":1617192593419,"results":"54","hashOfConfig":"42"},{"size":3409,"mtime":1617111885645,"results":"55","hashOfConfig":"42"},{"size":488,"mtime":1617106579153,"results":"56","hashOfConfig":"42"},{"size":4089,"mtime":1617092184782,"results":"57","hashOfConfig":"42"},{"size":3510,"mtime":1617607215640,"results":"58","hashOfConfig":"42"},{"size":679,"mtime":1617373731653,"results":"59","hashOfConfig":"42"},{"size":553,"mtime":1615202429070,"results":"60","hashOfConfig":"42"},{"size":4124,"mtime":1617092169283,"results":"61","hashOfConfig":"42"},{"size":2236,"mtime":1617284612985,"results":"62","hashOfConfig":"42"},{"size":460,"mtime":1615898898611,"results":"63","hashOfConfig":"42"},{"size":891,"mtime":1617373753604,"results":"64","hashOfConfig":"42"},{"size":2281,"mtime":1616071876187,"results":"65","hashOfConfig":"42"},{"size":5554,"mtime":1616419740324,"results":"66","hashOfConfig":"42"},{"size":1854,"mtime":1616055716972,"results":"67","hashOfConfig":"42"},{"size":8020,"mtime":1617285231321,"results":"68","hashOfConfig":"42"},{"size":6818,"mtime":1617177484344,"results":"69","hashOfConfig":"42"},{"size":1918,"mtime":1616068505128,"results":"70","hashOfConfig":"42"},{"size":4415,"mtime":1616055574913,"results":"71","hashOfConfig":"42"},{"size":6015,"mtime":1616416533559,"results":"72","hashOfConfig":"42"},{"size":3483,"mtime":1617114808040,"results":"73","hashOfConfig":"42"},{"size":4162,"mtime":1617278985078,"results":"74","hashOfConfig":"42"},{"size":4345,"mtime":1617276888748,"results":"75","hashOfConfig":"42"},{"size":1611,"mtime":1617276843834,"results":"76","hashOfConfig":"42"},{"size":222,"mtime":1617276837669,"results":"77","hashOfConfig":"42"},{"size":2799,"mtime":1617276826764,"results":"78","hashOfConfig":"42"},{"size":719,"mtime":1617373771739,"results":"79","hashOfConfig":"42"},{"size":4646,"mtime":1617276314663,"results":"80","hashOfConfig":"42"},{"size":403,"mtime":1617371038740,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1vajzcc",{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":10,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":6,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":9,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":10,"source":"177","usedDeprecatedRules":"84"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"84"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\index.js",[],["185","186"],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\App.js",["187","188","189","190"],"import logo from './logo.svg';\nimport './App.css';\nimport { Router, Route, Switch, Redirect, withRouter, BrowserRouter } from 'react-router-dom';\nimport {LoginPage} from './Pages/LoginPage';\nimport { HomePage}  from './Pages/HomePage';\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { History } from './Tools/History';\nimport { AddEducation } from './Pages/AddEducation';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {PrivateRoute} from './Components/PrivateRoute';\n\nclass App extends Component {\n\n  constructor(_props) {\n    super(_props);\n    History.listen((location, action) => {\n    });\n\n}\nrender = ()=> {\n  return ( \n  <div>\n    <ToastContainer />\n    <Router history={History}>\n     \n    <Switch>\n      <Route exact path={ process.env.PUBLIC_URL+\"/login\" } component={LoginPage} />\n      <PrivateRoute exact path={ process.env.PUBLIC_URL+\"/\"} component={ HomePage} />\n      <PrivateRoute exact path={+process.env.PUBLIC_URL+\"/add_education\"} component={AddEducation}/>\n    </Switch>\n    </Router>\n  </div>\n  \n    \n  );\n}\n}\n\nconst MapStateToProps = _state => {\n\n  const { User } = _state.AuthenticationReducer;\n\n  return { User };\n}\n\nexport default connect(MapStateToProps, null)(App);","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\reportWebVitals.js",[],["191","192"],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\LoginPage.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\AuthenticationAction.js",["193","194","195"],"import { toast } from 'react-toastify';\r\nimport Constant from '../Constants/AuthenticationConstant';\r\nimport {AuthenticationService} from '../Services/AuthenticationService';\r\nimport { History } from '../Tools/History';\r\n\r\nfunction Fail() {return {type:Constant.LoginFail};}\r\nfunction Request() {return{type:Constant.LoginRequest};}\r\n\r\n\r\nconst Login=(_username,_password) => {\r\n    return _dispatch => {\r\n     _dispatch(Request());\r\n\r\n    AuthenticationService.Login(_username,_password).\r\n        then(_response => {\r\n            if(!_response.success){\r\n                toast.error(\"Kullanıcı Bulunamadı\");\r\n                return;\r\n            }\r\n\r\n            localStorage.setItem('user_',_response.data.user.id);\r\n            localStorage.setItem('token_',_response.data.token);\r\n            _dispatch(Success(_response.data.user));\r\n            History.push(process.env.PUBLIC_URL);\r\n            console.log(\"Giriş yapılıyor\");\r\n            \r\n        }).\r\n        catch(_error => {\r\n            console.log(_error);\r\n            _dispatch(Fail());\r\n    });\r\n\r\n};\r\nfunction Success(_item) { return {type:Constant.LoginSuccess,Payload:_item};}\r\n}\r\nconst Logout =()=>{\r\n    localStorage.clear(\"user_\");\r\n    return {type:Constant.Logout};\r\n}\r\n\r\nexport default { Login, Logout}\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\AuthenticationService.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\AuthenticationConstant.js",["196"],"export default {\r\n    LoginFail:'LoginFail',\r\n    LoginSuccess:'LoginSuccess',\r\n    LoginRequest:'LoginRequest',\r\n    Logout:'Logout'\r\n};","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Tools\\RequestTool.js",["197"],"\r\nconst GetRequest=(_url) => {\r\n    \r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method:'get',\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem('token_')\r\n                },\r\n            }\r\n        )\r\n    );\r\n\r\n\r\n}\r\n\r\nconst PostRequest=(_url,_data) =>{\r\n\r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method:'post',\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem(\"token_\")\r\n                },\r\n                body:JSON.stringify(_data)\r\n            }));\r\n}\r\n\r\n\r\nconst PutRequest = (_url, _data) => {\r\n\r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method: 'put',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem(\"token_\")\r\n                },\r\n                body: JSON.stringify(_data)\r\n            }));\r\n}\r\n\r\n\r\nconst DeleteRequest=(_url,_data)=>{\r\n    return HandleResponse(\r\n        fetch(\r\n            _url,\r\n            {\r\n                method:'delete',\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer '+ localStorage.getItem(\"token_\")\r\n                },\r\n                body:JSON.stringify(_data)\r\n            }));\r\n}\r\n\r\n\r\nconst HandleResponse= (_promise) => {\r\n    return _promise.\r\n        then(_response => {\r\n            if(!_response.ok){\r\n                if(_response.status===401){\r\n                     window.location.href='/login';\r\n                    return {Success: false};\r\n            }\r\n            return Promise.reject(_response.statusText);\r\n        }\r\n        return _response.json();\r\n\r\n    });\r\n}\r\n\r\nexport const RequestTool={ GetRequest, PostRequest,PutRequest,DeleteRequest }","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Tools\\Store.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\RootReducer.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\AuthenticationReducer.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Tools\\History.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\HomePage.js",["198"],"import React,{Component} from 'react';\r\nimport {EducationPage} from '../Components/EducationPage';\r\nimport {MarketPage} from '../Components/MarketPage';\r\nimport { Container } from '@material-ui/core';\r\nimport {NavBar} from '../Components/Nav.js';\r\nimport { AddEducation } from './AddEducation';\r\n\r\n\r\nexport class HomePage extends Component {\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"float-xl-left w-100 p-3\">\r\n                     <NavBar/>\r\n                </div>\r\n                \r\n                <Container>\r\n                \r\n                   \r\n               \r\n              <div className=\"float-xl-left w-50 p-3\">\r\n                  <EducationPage />\r\n              </div>\r\n                \r\n           <div className=\"float-xl-left w-50 p-3\">\r\n                <MarketPage />\r\n           </div>\r\n           \r\n            </Container>\r\n            \r\n            </div>\r\n           \r\n            \r\n        \r\n           \r\n        )\r\n    }\r\n}","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\EducationReducer.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\EducationConstant.js",["199"],"export default  {\r\n    GetCurrentCourse:'GetCurrentCourse',\r\n    GetCurrentCourseSuccess: 'GetCurrentCourseSuccess',\r\n    GetCurrentCourseFail: 'GetCurrentcourseFail',\r\n    JoinCourse: 'JoinCourse',\r\n    WillBeMentor:'WillBeMentor',\r\n    WillBeMentorSuccess:'WillBeMentorSuccess',\r\n    AddCourseRequest:'AddCourseRequest',\r\n    AddCourseSuccess:'AddCourseSuccess',\r\n    AddCourseFail:'AddCourseFail',\r\n    JoinCourseSuccess:'JoinCourseSuccess',\r\n    GetAllJoinUsers:'GetAllJoinUsers'\r\n}\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\AddEducation.js",["200","201"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport EducationAction from '../Actions/EducationAction';\r\nimport EducationReducer from '../Reducers/EducationReducer';\r\nimport '../index.css';\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nclass AddEducationComp extends Component {\r\n\r\n    state = {\r\n        StartDate: \"\",\r\n        FinishDate: \"\",\r\n        Subject: \"\",   \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.isAdded!==this.props.isAdded){\r\n            this.setState(\r\n                {\r\n                    StartDate: \"\",\r\n                    FinishDate: \"\",\r\n                    Subject: \"\", \r\n                }\r\n            )\r\n        }\r\n      \r\n    }\r\n    \r\n\r\n    Add = () => {\r\n        const { StartDate, FinishDate, Subject } = this.state;\r\n\r\n        if (StartDate > FinishDate) {\r\n\r\n            toast.warning(\"Başlangıç tarihi bitiş tarihinden büyük olamaz\");\r\n            return;\r\n        }\r\n        if (!StartDate) {\r\n\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n        }\r\n\r\n        let _newEducation = {\r\n            StartDate,\r\n            FinishDate,\r\n            Subject,\r\n        }\r\n\r\n        this.setState({\r\n            StartDate: \"\",\r\n            FinishDate: \"\",\r\n            Subject: \"\",\r\n        });\r\n        \r\n        this.props.Add(_newEducation);\r\n    }\r\n\r\n    HandleChange = (_e) => {\r\n        const { name, value } = _e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    render() {\r\n        \r\n             return (\r\n            <div className=\"add-education\" style={{ padding: 50 }}>\r\n\r\n                <Grid container spacing={10} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            value = {this.state.StartDate}\r\n                            name=\"StartDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value = {this.state.FinishDate}\r\n                            name=\"FinishDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            defaultValue=\"\"\r\n                            onChange={this.HandleChange}\r\n                            name='Subject'\r\n                            value = {this.state.Subject}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açılacak Kurs Konusu\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        ) \r\n   \r\n      \r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n\r\n    const { AddCourse } = _state.EducationReducer;\r\n\r\n    return { AddCourse };\r\n\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        Add: (_newCourse) => _dispatch(EducationAction.Add(_newCourse)),\r\n        GetCurrentCourse: () => _dispatch(EducationAction.GetCurrentCourse()),\r\n\r\n    }\r\n}\r\n\r\nexport const AddEducation = connect(MapStateToProps, MapDispatchToProps)(AddEducationComp);\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\EducationAction.js",["202","203","204","205","206","207","208","209","210","211","212"],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\EducationService.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\Modal.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\AddMarket.js",["213","214"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketAction from '../Actions/MarketAction'\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport { toast } from 'react-toastify'\r\n\r\nclass AddMarketComponent extends Component {\r\n\r\n    state = {\r\n        Subject: '',\r\n        Description: '',\r\n        StartDate: '',\r\n        FinishDate: '',\r\n        UserId: null\r\n    }\r\n\r\n    Add = () => {\r\n\r\n        const { Subject, Description, StartDate, FinishDate, UserId } = this.state;\r\n\r\n        if (StartDate > FinishDate) {\r\n\r\n            toast.warning(\"Başlangıç tarihi bitiş tarihinden büyük olamaz\");\r\n            return;\r\n        }\r\n        if (!StartDate && !FinishDate && !Subject && !Description) {\r\n\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n        }\r\n\r\n\r\n        let newMarketList = {\r\n            Subject,\r\n            Description,\r\n            StartDate,\r\n            FinishDate,\r\n            UserId: localStorage.getItem(\"user_\")\r\n\r\n        }\r\n\r\n        this.setState({\r\n            Subject: '',\r\n            Description: '',\r\n            StartDate: '',\r\n            FinishDate: '',\r\n\r\n        })\r\n\r\n        this.props.Add(newMarketList);\r\n    }\r\n\r\n    HandleChange = (_e) => {\r\n\r\n        const { name, value } = _e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-market\" style={{ padding: 35 }}>\r\n\r\n                <Grid container spacing={10} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            value={this.state.StartDate}\r\n                            name=\"StartDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={this.state.FinishDate}\r\n                            name=\"FinishDate\"\r\n                            onChange={this.HandleChange}\r\n                            InputLabelProps={{ shrink: true }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={this.state.Subject}\r\n                            onChange={this.HandleChange}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                             value={this.state.Description}\r\n                            onChange={this.HandleChange}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    return;\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n\r\n    return {\r\n        Add: (_newMarketList) => _dispatch(MarketAction.Add(_newMarketList))\r\n    }\r\n}\r\n\r\nexport const AddMarket = connect(MapStateToProps, MapDispatchToProps)(AddMarketComponent);","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\MarketAction.js",["215","216","217","218","219","220","221"],"import Constant from '../Constants/MarketConstant';\r\nimport{ MarketService } from '../Services/MarketService';\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\n\r\n\r\nconst GetCurrentMarketList =()=>{\r\n    return _dispatch =>{\r\n        MarketService.GetAll().\r\n        then(_response=>{\r\n            if(!_response.success){\r\n\r\n                _dispatch(Fail(\"Market Listeleri getirilmedi\"));\r\n            }\r\n            _dispatch(Success(_response.data));\r\n            ;\r\n        }).\r\n        catch(_ex=>{\r\n\r\n            _dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));\r\n\r\n        });\r\n    };\r\n\r\n    function Success(_item) {return {type:Constant.GetMarketListSuccess,Payload:_item};}\r\n    function Fail(_item) {return {type:Constant.GetMarketListFail,Payload:_item};}\r\n}\r\n\r\nconst Add =(_value) =>{\r\n    return _dispatch =>{\r\n        MarketService.Add(_value).\r\n        then(_response => {\r\n                if(!_response.success){\r\n\r\n                    _dispatch(Fail(\"Liste eklenemedi\"));\r\n                    toast.error(\"Market listesine eklenemedi.\");\r\n\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Market listesine eklendi.\");\r\n              \r\n               \r\n            }).\r\n            catch(_ex=>{\r\n                _dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));\r\n\r\n            });\r\n    };\r\n\r\n    function Success(_item) {return{type:Constant.AddMarketListSuccess,Payload:_item}; }\r\n\r\n    function Fail(_item) { return {type:Constant.AddMarketListFail,Payload:_item};  }\r\n\r\n\r\n}\r\n\r\nconst GetMarketById=(_id) =>{\r\n\r\n    return _dispatch =>{\r\n        MarketService.GetById(_id).\r\n        then(_response=>{\r\n            if(!_response.success){\r\n                console.log(\"İlgili item getirelemedi\");\r\n                return;\r\n            }\r\n            _dispatch(Success(_response.data));\r\n            toast.success(\"İlgili talep başarılı bir şekilde getirildi.\");\r\n\r\n        }).\r\n        catch(_ex=>{\r\n            console.log(\"Beklenmeyen bir hata oluştu\");\r\n        })\r\n    }\r\n\r\n    function Success(_item) {return { type:Constant.GetMarketItemByIdSuccess,Payload:_item}; }\r\n}\r\n\r\n\r\nexport default {GetCurrentMarketList,Add,GetMarketById}","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\MarketConstant.js",["222"],"export default {\r\n    GetMarketListSuccess:'GetMarketListSuccess',\r\n    GetMarketListFail:'GetMakretListFail',\r\n    AddMarketListSuccess:'AddMarketListSuccess',\r\n    AddMarketListFail:'AddMarketListFail',\r\n    GetMarketItemByIdSuccess:'GetMarketItemByIdSuccess',\r\n    AddMarketItemSuccess:'AddMarketItemSuccess',\r\n    GetAllItemSuccess:'GetAllItemSuccess',\r\n    UpdateMarketItemSuccess:'UpdateMarketItemSuccess',\r\n    GetItemByIdSuccess:'GetItemByIdSuccess'\r\n}","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\MarketService.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\MarketReducer.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\AddMarketItem.js",["223","224","225"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\nclass AddMarketItemComponent extends Component {\r\n\r\n    state = { \r\n        request: \"\",\r\n        count:\"\"\r\n     }\r\n\r\n    Add = () => {\r\n        const {request, count}=this.state;\r\n\r\n        if(!request && !count){\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n\r\n        }\r\n\r\n        let addState={\r\n            Item: this.state.request,\r\n            Count:this.state.count,\r\n            MarketId:this.props.MarketId,\r\n            UserId:localStorage.getItem(\"user_\")\r\n        }\r\n\r\n        this.props.AddMarketItem(addState);\r\n\r\n        console.log({ Item: this.state.request, MarketId: this.props.MarketId });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props. GetMarketById(this.props.MarketId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.MarketId !== this.props.MarketId) {\r\n            this.props. GetMarketById(this.props.MarketId);\r\n            this.setState({ request: \"\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { MarketItem} = this.props;\r\n\r\n        if (!MarketItem.Data) {\r\n            console.log(\"Data yok\");\r\n            return \"\";\r\n        }\r\n       \r\n        return (\r\n            <div className=\"add-marketlist\" style={{ padding: 70 }}>\r\n                <Grid container spacing={5} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItem.Data.startDate.toString().slice(0, 10)}\r\n                            fullWidth\r\n                            disabled={true}\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            name=\"StartDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={MarketItem.Data.finishDate.toString().slice(0, 10)}\r\n                            name=\"FinishDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField \r\n                        value={MarketItem.Data.subject}\r\n                            disabled={true}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItem.Data.username}\r\n                            name='Username'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Talebi Açan kişi\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItem.Data.description}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <TextField value={this.state.request}\r\n\r\n                            onChange={(_e) => this.setState({ request: _e.target.value })}\r\n                            name='Item'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"İstekler\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField value={this.state.count}\r\n\r\n                            onChange={(_e) => this.setState({ count: _e.target.value })}\r\n                            name='Count'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Adet\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n\r\n    const { MarketItem} = _state.MarketReducer;\r\n    const {AddedMarketItem} =_state.MarketItemReducer;\r\n    return { MarketItem,AddedMarketItem};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetMarketById: (_id) => _dispatch(MarketAction.GetMarketById(_id)),\r\n        AddMarketItem: (_data) => _dispatch(MarketItemAction.AddMarketItem(_data))\r\n    }\r\n}\r\n\r\nexport const AddMarketItem = connect(MapStateToProps, MapDispatchToProps)(AddMarketItemComponent);\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\MarketItemAction.js",["226","227","228","229","230","231","232","233","234","235"],"import Constant from '../Constants/MarketConstant';\r\nimport{ MarketService } from '../Services/MarketService';\r\n\r\nconst AddMarketItem =(_value) =>{\r\n    return _dispatch =>{\r\n        MarketService.AddMarketItem(_value).\r\n            then(_response =>{\r\n\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n\r\n    function Success(_item) { return {type:Constant.AddMarketItemSuccess, Payload:_item};}\r\n}\r\n\r\nconst GetAllItem=(_marketId) =>{\r\n    return _dispatch =>{\r\n        MarketService.GetAllItem(_marketId).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n\r\n    function Success(_item) {return {type:Constant. GetAllItemSuccess, Payload:_item};}\r\n\r\n}\r\n\r\nconst UpdateItem=(_item) =>{\r\n    return _dispatch =>{\r\n        MarketService.UpdateItem(_item).\r\n            then(_response =>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n    function Success(_data) {return {type:Constant.UpdateMarketItemSuccess, Payload:_data};}\r\n\r\n}\r\nconst GetItem=(_id)=>{\r\n    return _dispatch =>{\r\n        MarketService.GetItemById(_id).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n    function Success(_data) {return { type:Constant.GetItemByIdSuccess, Payload:_data};}\r\n}\r\nexport default {AddMarketItem,GetAllItem,UpdateItem,GetItem}","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\EducationPage.js",["236","237"],"import React, { Component } from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { IconButton, TableRow, Container, Button } from '@material-ui/core';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { AddEducation } from '../Pages/AddEducation';\r\nimport EducationAction from '../Actions/EducationAction';\r\nimport { connect } from 'react-redux';\r\nimport Modal from './Modal';\r\nimport swal from 'sweetalert';\r\nimport { EducationList }  from '../Pages/EducationList';\r\n\r\n\r\n\r\n\r\n\r\nclass EducationComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            showItemListModal: false,\r\n            Id: 0,\r\n            StartDate: '',\r\n            FinishDate: '',\r\n            Subject: '',\r\n            MentorId: 0,\r\n            UserId: 0,\r\n            isAdded: false,\r\n           \r\n\r\n\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n\r\n    }\r\n    updateValue = 1;\r\n    NewCourse = 0;\r\n\r\n    componentDidMount() {\r\n        this.props.GetCurrentCourse();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.Currentcourses.Data !== null && prevProps.Currentcourses.Data.length !== this.props.Currentcourses.Data.length) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showModal = () => {\r\n        this.setState({ show: true })\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ show: false })\r\n    }\r\n\r\n    hideItemListModal = () => {\r\n        this.setState({ showItemListModal: false })\r\n    }\r\n    showItemListModal = (_courseId,) => {\r\n        this.setState({ showItemListModal: true, Id: _courseId})\r\n    }\r\n\r\n    mentorAdd = (_course) => {\r\n        let _id = localStorage.getItem('user_');\r\n\r\n        let addedMentor = {\r\n            Id: _course.id,\r\n            StartDate: _course.startDate,\r\n            FinishDate: _course.finishDate,\r\n            Subject: _course.subject,\r\n            MentorId: _id\r\n        };\r\n        swal({\r\n            text: \"Kursa mentor olmak istiyor musunuz?\",\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.WillBeMentor(addedMentor);\r\n            }\r\n        })\r\n\r\n       \r\n        this.updateValue = 0;\r\n        this.setState({ isAdded: false })\r\n    }\r\n\r\n    joinCourse = (_userId, _courseId) => {\r\n\r\n        let joinCourse = {\r\n            EducationId: _courseId,\r\n            UserId: _userId\r\n        };\r\n        swal({\r\n            text: \"Kursa kayıt olmak istiyor musunuz?\",\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.JoinCourse(joinCourse);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { Currentcourses, AddCourse } = this.props;\r\n        if (!Currentcourses.Data) {\r\n            console.log(\"Data yok\");\r\n            return \" \";\r\n\r\n        }\r\n        if (AddCourse.Data && this.state.show) {\r\n            this.hideModal();\r\n\r\n            AddCourse.Data = null;\r\n        }\r\n\r\n\r\n\r\n        const element_courses = courses => {\r\n            return (\r\n\r\n                courses.map(course => {\r\n                    let buttonMentor;\r\n                    if (course.mentorId == null) {\r\n\r\n                        buttonMentor = <SchoolIcon onClick={() => this.mentorAdd(course)}></SchoolIcon>;;\r\n                    }\r\n                    else {\r\n                        buttonMentor = \"\";\r\n                    }\r\n\r\n                    return (\r\n                        <TableRow>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <FolderIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={course.subject}\r\n                                    secondary={course.startDate.toString().slice(0, 10) + \" - \" + course.finishDate.toString().slice(0, 10)}\r\n                                />\r\n                                <IconButton >\r\n                                    {buttonMentor}\r\n                                </IconButton>\r\n\r\n                                <IconButton edge=\"end\" aria-label=\"Add\" onClick={() => this.joinCourse(localStorage.getItem('user_'), course.id)} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <PersonAddIcon />\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"Add\" onClick={() => this.showItemListModal(course.id)}  style={{ display: 'block', margin: 'auto' }}>\r\n                                    <ListIcon />\r\n                                </IconButton>\r\n\r\n\r\n                            </ListItem>\r\n                        </TableRow>\r\n                    );\r\n                })\r\n\r\n            );\r\n        }\r\n\r\n\r\n        return (\r\n            <div style={{maxHeight: '100%', overflow: 'auto'}} >\r\n                <h3>Eğitim</h3>\r\n\r\n                {this.props.AddCourse.Data == null && (<Modal show={this.state.show} handleClose={this.hideModal}>\r\n                    <Container>\r\n                        <AddEducation CourseId={this.state.isAdded} />\r\n                    </Container>\r\n                </Modal>)}\r\n\r\n                {this.state.Id != 0  &&  (\r\n                    <Modal show={this.state.showItemListModal} handleClose={this.hideItemListModal}>\r\n                        <Container>\r\n                            <EducationList CourseId={this.state.Id} />\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                <TableContainer component={Paper} style={{overflowY:\"scroll\", height:620}}>\r\n                    <Table  aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n\r\n                                <IconButton className=\"float-right\" edge=\"end\" aria-label=\"Add\" onClick={this.showModal} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <AddIcon style={{ color: green[400] }} />\r\n                                </IconButton>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n                            {element_courses(Currentcourses.Data)}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { Currentcourses, AddCourse, AddUserToCourse } = _state.EducationReducer;\r\n    return { Currentcourses, AddCourse, AddUserToCourse };\r\n\r\n}\r\n\r\n\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetCurrentCourse: () => _dispatch(EducationAction.GetCurrentCourse()),\r\n        WillBeMentor: (_data) => _dispatch(EducationAction.WillBeMentor(_data)),\r\n        JoinCourse: (_data) => _dispatch(EducationAction.JoinCourse(_data))\r\n    }\r\n}\r\n\r\nexport const EducationPage = connect(MapStateToProps, MapDispatchToProps)(EducationComponent);\r\n\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\MarketPage.js",["238","239","240","241","242","243"],"import React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { AddMarket } from '../Pages/AddMarket';\r\nimport { AddMarketItem } from \"../Pages/AddMarketItem\";\r\nimport {MarketItemList} from \"../Pages/MarketItemList\";\r\nimport Modal from './Modal';\r\n\r\n\r\nimport { IconButton, TableRow, Container } from '@material-ui/core';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass MarketComponent extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showAddModal: false,\r\n            showAddItemModal: false,\r\n            Id: 0,\r\n            StartDate: '',\r\n            FinishDate: '',\r\n            Subject: '',\r\n            Description: '',\r\n            Id: 0,\r\n            MarketId: 0,\r\n            PanelId:0,\r\n        };\r\n     }\r\n\r\n    showAddModal = (_marketId,_panel) => {\r\n        this.setState({ showAddModal: true, MarketId: _marketId, PanelId:_panel})\r\n    }\r\n\r\n    hideAddModal = () => {\r\n        this.setState({ showAddModal: false })\r\n    }\r\n\r\n    showAddItemModal = () => {\r\n        this.setState({ showAddItemModal: true })\r\n    }\r\n\r\n    hideAddItemModal = () => {\r\n        this.setState({ showAddItemModal: false })\r\n    }\r\n    showItemListModal = (_marketId,_panel) => {\r\n        this.setState({ showItemListModal: true, MarketId: _marketId, PanelId:_panel })\r\n    }\r\n\r\n    hideItemListModal = () => {\r\n        this.setState({ showItemListModal: false })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.GetCurrentMarketList();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.CurrentMarketList.Data!==null && prevProps.CurrentMarketList.Data.length!==this.props.CurrentMarketList.Data.length) {\r\n            \r\n            this.render();\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { CurrentMarketList,AddedMarketList,AddedMarketItem} = this.props;\r\n\r\n        if (!CurrentMarketList.Data) {\r\n            console.log(\"Data yok\");\r\n            return \" \";\r\n\r\n        }\r\n\r\n        if (AddedMarketList.Data!==null && this.state.showAddItemModal) {\r\n            this.hideAddItemModal();\r\n            AddedMarketList.Data = null;\r\n        }\r\n        if (AddedMarketItem.Data==0 && this.state.showAddModal) {\r\n            this.hideAddModal();\r\n            AddedMarketItem.Data = null;\r\n        }\r\n\r\n        const item_market = markets => {\r\n            return (\r\n                markets.map(market => {\r\n                    return (\r\n                        <TableRow>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                        <StoreIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={market.subject}\r\n                                    secondary={market.description}\r\n                                />\r\n\r\n                                <IconButton aria-label=\"Add\" onClick={() => this.showItemListModal(market.id,1)} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <ListIcon />\r\n                                </IconButton>\r\n                                <IconButton  onClick={() => this.showAddModal(market.id,2)} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <PersonAddIcon />\r\n                                </IconButton>\r\n\r\n                            </ListItem>\r\n                        </TableRow>\r\n                    );\r\n\r\n                })\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h3>Market</h3>\r\n\r\n                {this.state.MarketId != 0 && this.state.PanelId==2 && (\r\n                    <Modal show={this.state.showAddModal} handleClose={this.hideAddModal}>\r\n                        <Container>\r\n                            <AddMarketItem MarketId={this.state.MarketId} />\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                    {this.state.MarketId != 0 && this.state.PanelId==1 && (\r\n                    <Modal show={this.state.showItemListModal} handleClose={this.hideItemListModal}>\r\n                        <Container>\r\n                        <MarketItemList MarketId={this.state.MarketId}  />\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                <TableContainer  style={{overflowY:\"scroll\", height:620}}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <Modal show={this.state.showAddItemModal} handleClose={this.hideAddItemModal}>\r\n                                    <Container>\r\n                                        <AddMarket/>\r\n                                    </Container>\r\n                                </Modal>\r\n                                <IconButton className=\"float-right\" edge=\"end\" aria-label=\"Add\" onClick={this.showAddItemModal} style={{ display: 'block', margin: 'auto' }}>\r\n                                    <AddIcon style={{ color: green[400] }} />\r\n                                </IconButton>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {item_market(CurrentMarketList.Data)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst MapStateToProps = _state => {\r\n\r\n    const { CurrentMarketList,AddedMarketList }=_state.MarketReducer;\r\n\r\n    const {AddedMarketItem} = _state.MarketItemReducer;\r\n\r\n    return { CurrentMarketList, AddedMarketList , AddedMarketItem};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetCurrentMarketList: () => _dispatch(MarketAction.GetCurrentMarketList())\r\n    }\r\n}\r\nexport const MarketPage = connect(MapStateToProps, MapDispatchToProps)(MarketComponent);\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\MarketItemReducer.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\MarketItemList.js",["244"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '../Components/Modal';\r\nimport { Container } from '@material-ui/core';\r\nimport { MarketItemUpdate } from './MarketItemUpdate';\r\n\r\n\r\nclass ItemList extends Component {\r\n    state = {\r\n        Item: \"\",\r\n        Count: \"\",\r\n        showEditModal: false,\r\n        ItemId:-1\r\n\r\n    }\r\n\r\n    showEditModal = (_marketItemId) => {\r\n        this.setState({ showEditModal: true, ItemId:_marketItemId })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({ showEditModal: false })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.GetAllItem(this.props.MarketId);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.MarketId !== this.props.MarketId) {\r\n            this.props.GetAllItem(this.props.MarketId);\r\n        }\r\n        if (prevProps.AllItem) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n\r\n        const { AllItem } = this.props;\r\n        if (!AllItem.Data) {\r\n            return \" \";\r\n        }\r\n\r\n        const list_item = items => {\r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n\r\n                    let button;\r\n                    if (item.userId===parseInt(localStorage.getItem('user_'))){\r\n                        button=<Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => this.showEditModal(item.id)}>Düzenle</Button>;\r\n                    }\r\n                    else{\r\n                        button=\" \";\r\n                    }\r\n                        return (\r\n                            <TableRow >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {item.marketName}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\"> {item.item}</TableCell>\r\n                                <TableCell align=\"right\"> {item.count}</TableCell>\r\n                                <TableCell align=\"right\"> {item.username}</TableCell>\r\n                               \r\n\r\n                                <TableCell align=\"right\">{button}</TableCell>\r\n\r\n                            </TableRow>\r\n\r\n                        )\r\n                })\r\n            );\r\n        }\r\n\r\n        const _items = list_item(AllItem.Data);\r\n\r\n        return (\r\n\r\n            <div className=\"marketlist\" style={{ padding: 25 }}>\r\n\r\n                {this.state.ItemId != -1 && (\r\n                    <Modal show={this.state.showEditModal} handleClose={this.hideEditModal}>\r\n                        <Container>\r\n                            <MarketItemUpdate ItemId={this.state.ItemId}/>\r\n                        </Container>\r\n                    </Modal>)}\r\n\r\n                <TableContainer component={Paper}>\r\n                    \r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Market</TableCell>\r\n                                <TableCell align=\"right\">Alınacaklar</TableCell>\r\n                                <TableCell align=\"right\">Adet</TableCell>\r\n                                <TableCell align=\"right\">İsteyen kişi</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {_items}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { AllItem } = _state.MarketItemReducer;\r\n    return { AllItem };\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n\r\n    return {\r\n        GetAllItem: (_id) => _dispatch(MarketItemAction.GetAllItem(_id))\r\n    };\r\n}\r\n\r\nexport const MarketItemList = connect(MapStateToProps, MapDispatchToProps)(ItemList);","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\MarketItemUpdate.js",["245","246"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport {toast} from 'react-toastify'\r\n\r\nclass MarketItemUpdateComponent extends Component {\r\n\r\n    state = {\r\n        request: \"\",\r\n        count: \"\",\r\n        loaded: false\r\n    }\r\n \r\n\r\n    componentDidMount() {\r\n\r\n        this.props.GetItem(this.props.ItemId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.ItemId !== this.props.ItemId) {\r\n\r\n            this.props.GetItem(this.props.ItemId);\r\n            this.setState({ request: \"\" });\r\n        }\r\n\r\n\r\n    }\r\n    \r\n\r\n    static getDerivedStateFromProps(props,state) {\r\n        // Any time the current user changes,\r\n        // Reset any parts of state that are tied to that user.\r\n        // In this simple example, that's just the email.\r\n        if (!state.loaded && props.MarketItemById && props.MarketItemById.Data) {\r\n\r\n          return {\r\n              loaded: true,\r\n                request: props.MarketItemById.Data.item,\r\n                count:props.MarketItemById.Data.count\r\n          };\r\n        }\r\n        return null;\r\n      }\r\n    Update = (_id) => {\r\n        const {request,count}=this.state;\r\n\r\n        if(!request && !count){\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n\r\n        }\r\n\r\n        let updateState = {\r\n            Id: _id,\r\n            Item: this.state.request,\r\n            Count: this.state.count,\r\n        }\r\n\r\n        this.props.UpdateItem(updateState);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { MarketItemById } = this.props;\r\n        if (!MarketItemById.Data) {\r\n            console.log(\"Data yok\");\r\n            return \"\";\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"update-marketlist\" style={{ padding: 70 }}>\r\n\r\n                <Grid container spacing={5} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.startDate.toString().slice(0, 10)}\r\n                            fullWidth\r\n                            disabled={true}\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            name=\"StartDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={MarketItemById.Data.finishDate.toString().slice(0, 10)}\r\n                            name=\"FinishDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.subject}\r\n                            disabled={true}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItemById.Data.username}\r\n                            name='Username'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Talebi Açan kişi\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItemById.Data.description}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.item}\r\n\r\n                            onChange={(_e) => this.setState({ request: _e.target.value })}\r\n                            name='Item'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"İstekler\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n\r\n                            value={this.state.count}\r\n\r\n                            onChange={(_e) => this.setState({ count: _e.target.value })}\r\n                            name='Count'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Adet\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={()=>this.Update(MarketItemById.Data.id)} color=\"primary\" variant=\"contained\"> Düzenle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { MarketItemById } = _state.MarketItemReducer;\r\n\r\n    return { MarketItemById };\r\n\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetItem: (_id) => _dispatch(MarketItemAction.GetItem(_id)),\r\n        UpdateItem: (_id) => _dispatch(MarketItemAction.UpdateItem(_id))\r\n\r\n    }\r\n}\r\nexport const MarketItemUpdate = connect(MapStateToProps, MapDispatchToProps)(MarketItemUpdateComponent);","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\EducationList.js",["247"],"\r\nimport React, { Component } from 'react'\r\nimport  EducationAction  from '../Actions/EducationAction';\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nclass EducationListComponent extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.GetAllJoinUsers(this.props.CourseId);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.CourseId !== this.props.CourseId) {\r\n            this.props.GetAllJoinUsers(this.props.CourseId);\r\n        }\r\n        if (prevProps.GetAllUsers) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {GetAllUsers}=this.props;\r\n\r\n        if(!GetAllUsers.Data){\r\n            return \"\";\r\n        }\r\n        const list_item = items => {\r\n           \r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n                        return (\r\n                            <TableRow style={{ marginTop:5 }}>\r\n                                <TableCell  align=\"center\">\r\n                                    {item.username}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\"> {item.educationSubject}</TableCell>\r\n                            </TableRow>\r\n                           \r\n\r\n                        )\r\n                })\r\n            );\r\n        }\r\n        const _items = list_item(GetAllUsers.Data);\r\n        let MentorName=\"- \";\r\n        if(GetAllUsers.Data.length>0){\r\n            MentorName=GetAllUsers.Data[0].mentorName;\r\n        }\r\n        return (\r\n            \r\n            <div style={{ padding: 30}}>\r\n                <TableContainer style={{paddingLeft:5} }component={Paper}>\r\n                    \r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow  style={{ float:'right'}} ><h4 style={{ marginLeft:10,color:\"#3B177C\"}}>Kayıt Yaptıranlar Kullanıcılar</h4></TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\"><h5 style={{ color:\"#3B177C\"}}> Kursa Katılan: </h5> </TableCell>\r\n                                <TableCell align=\"center\"><h5 style={{ color:\"#3B177C\"}}>Kayıt Yapılan Kurs: </h5></TableCell>\r\n                                \r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {_items}\r\n                        </TableBody>\r\n                        <hr></hr>\r\n                        <TableRow ><h5 style={{ float:'right'}}>Eğitimi verecek kişi:<span>{ MentorName}</span></h5></TableRow>\r\n                    </Table>\r\n                </TableContainer>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps=_state=>{\r\n    const { GetAllUsers } = _state.EducationReducer;\r\n    return {GetAllUsers};\r\n}\r\n\r\nconst MapDispatchToProps =(_dispatch, _ownProps) =>{\r\n    return {\r\n        GetAllJoinUsers:(_id) => _dispatch(EducationAction.GetAllJoinUsers(_id)),\r\n    };\r\n}\r\n\r\nexport const EducationList=connect(MapStateToProps,MapDispatchToProps)(EducationListComponent);\r\n\r\n\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\Nav.js",["248"],"import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../Components/Modal';\r\nimport { Container } from '@material-ui/core';\r\nimport { ListMyCourses } from '../Pages/ListMyCourses';\r\nimport UserAction from '../Actions/UserAction';\r\nimport { UserMarketItems } from '../Pages/UserMarketItems';\r\nimport AuthenticationAction from '../Actions/AuthenticationAction';\r\n\r\nclass NavbarComps extends Component {\r\n\r\n    state={\r\n        showCourses:false,\r\n        showMarketItems:false,\r\n        renderMarkerts:false,\r\n        renderCourses:false\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.props.GetUser(localStorage.getItem(\"user_\"));\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(!prevProps.User){\r\n            this.props.GetUser(this.props.User.id);\r\n            this.render();\r\n        }\r\n    }\r\n    showMyCourses=(_user)=>{\r\n        if(_user){\r\n             this.setState({ showCourses: true,renderCourses:true })\r\n        }\r\n       \r\n    }\r\n    hideMyCourses = () => {\r\n            this.setState({ showCourses: false })\r\n    }\r\n\r\n    showMyMarketItems=(_user)=>{\r\n        if(_user){\r\n            this.setState({ showMarketItems: true,renderMarkerts:true })\r\n        }\r\n        \r\n    }\r\n    hideMyMarketItems = () => {\r\n        this.setState({ showMarketItems: false })\r\n    }\r\n\r\n\r\n    logout = () => {\r\n        swal({\r\n            text: \"Çıkış yapmak istiyor musunuz?\",\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.Logout();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {User}=this.props;\r\n        if(User==undefined){\r\n            return \"\";\r\n        }\r\n        return (\r\n            <div>\r\n                {this.state.renderCourses && (<Modal show={this.state.showCourses} handleClose={this.hideMyCourses}>\r\n                    <Container>\r\n                        <ListMyCourses UserId={localStorage.getItem(\"user_\")}/>\r\n                    </Container>\r\n                </Modal>)}\r\n\r\n                {this.state.renderMarkerts && (<Modal show={this.state.showMarketItems} handleClose={this.hideMyMarketItems}>\r\n                    <Container>\r\n                        <UserMarketItems UserId={localStorage.getItem(\"user_\")}/>\r\n                    </Container>\r\n                </Modal>)}\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">EGBA SİSTEM</Navbar.Brand>\r\n                   \r\n                    <h5 style={{ marginLeft:690, marginRight: 130 }}>Hoşgeldin {User.name ? User.name : \" \"}</h5>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                            \r\n\r\n                            <NavDropdown style={{ marginLeft: 575, marginRight: 30 }} title={User.name} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={()=>this.showMyCourses({User})}>Kurslarım</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={()=>this.showMyMarketItems({User})}>Market İsteklerim</NavDropdown.Item>\r\n                                \r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={() => this.logout()}>Çıkış Yap</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MapStateToProps= _state=>{\r\n    const {User}= _state.AuthenticationReducer;\r\n\r\n    return {User};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetUser : (_userId) => _dispatch(UserAction.GetUser(_userId)),\r\n        Logout:() =>_dispatch(AuthenticationAction.Logout())\r\n        \r\n    }\r\n}\r\n\r\nexport const NavBar=connect(MapStateToProps,MapDispatchToProps)(NavbarComps);\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\ListMyCourses.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Reducers\\UserReducer.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Constants\\UserConstant.js",["249"],"export default {\r\n    UserCoursesSuccess:'UserCoursesSuccess',\r\n    UserMarketItemsSuccess:'UserMarketItemsSuccess',\r\n    RemoveMarketItemSuccess:'RemoveMarketItemSuccess',\r\n    RemoveCourseSuccess:'RemoveCourseSuccess'\r\n}","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Actions\\UserAction.js",["250","251","252","253","254","255","256","257","258","259","260"],"import Constant from '../Constants/UserConstant';\r\nimport Constants from '../Constants/AuthenticationConstant';\r\nimport { UserService } from '../Services/UserService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GetMarketItems = (_userId) =>{\r\n    return _dispatch => {\r\n        UserService.GetAllItems(_userId).\r\n            then(_response =>{\r\n                if(!_response.success){\r\n                    _dispatch(Fail(_response.exception));\r\n                    toast.error(_response.Exception);\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Market listesi getirildi\");\r\n                \r\n               \r\n            }).\r\n            catch(_e=>{\r\n                \r\n\r\n            });\r\n    };\r\n    function Success(_value) {return {type:Constant.UserMarketItemsSuccess,Payload: _value};}\r\n    function Fail(_items) {return{type:Constant.UserMarketItemsSuccess, Payload:_items};}\r\n}\r\n\r\nconst GetCourses=(_userid) =>{\r\n    return _dispatch => {\r\n        UserService.GetAllCourses(_userid).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constant.UserCoursesSuccess, Payload:_item};}\r\n}\r\n\r\nconst GetUser=(_id) =>{\r\n    return _dispatch =>{\r\n        UserService.GetUser(_id).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constants.LoginSuccess,Payload:_item};}\r\n}\r\n\r\nconst RemoveMarket=(_item)=>{\r\n    return _dispatch =>{\r\n        UserService.RemoveMarketItem(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success())\r\n                toast.success(\"Market isteği kaldırıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success() {return {type:Constant.RemoveMarketItemSuccess,Payload:_item.id};}\r\n}\r\n\r\nconst RemoveCourse=(_item)=>{\r\n    return _dispatch =>{\r\n        UserService.RemoveCourse(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success())\r\n                toast.success(\"Kurs kaldırıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success() {return {type:Constant.RemoveCourseSuccess,Payload:_item.id};}\r\n}\r\n\r\nexport default{GetMarketItems,GetUser,GetCourses,RemoveMarket,RemoveCourse}","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Services\\UserService.js",[],"C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Pages\\UserMarketItems.js",["261"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserAction from '../Actions/UserAction';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport swal from 'sweetalert';\r\n\r\nclass UserMarketItemsComps extends Component {\r\n    componentDidMount() {\r\n        this.props.GetMarketItems(this.props.UserId);\r\n        this.render();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.UserMarketItems.Data!==null && prevProps.UserMarketItems.Data.length!==this.props.UserMarketItems.Data.length) {\r\n            this.render();\r\n        }\r\n    }\r\n  \r\n\r\n    removeItem=(item)=>{\r\n        swal({\r\n            text: \"Market isteğini silmek istiyor musunuz?\"+ item.id,\r\n            icon: \"info\",\r\n            buttons: [\"Hayır\", \"Evet\"]\r\n        }).then(_res => {\r\n            if (_res === true) {\r\n                this.props.RemoveMarket(item)  }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { UserMarketItems } = this.props;\r\n        if (UserMarketItems.Data == null) {\r\n            return \"\";\r\n        }\r\n        const list_item = items => {\r\n\r\n            return (\r\n\r\n                items.map(item => {\r\n\r\n                    let button;\r\n                    if (item.userId === parseInt(localStorage.getItem('user_'))) {\r\n                        button = <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => this.showEditModal(item.id)}>Düzenle</Button>;\r\n                    }\r\n                    else {\r\n                        button = \" \";\r\n                    }\r\n                    return (\r\n                        <TableRow >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {item.marketName}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\"> {item.item}</TableCell>\r\n                            <TableCell align=\"right\"> {item.count}</TableCell>\r\n                            <TableCell align=\"right\"> {item.requestUserName}</TableCell>\r\n\r\n\r\n                            <TableCell>  <Button  onClick={() => this.removeItem( item )} variant=\"contained\" color=\"secondary\"startIcon={<DeleteIcon />}>Kaldır</Button></TableCell>\r\n\r\n                        </TableRow>\r\n\r\n                    )\r\n                })\r\n            );\r\n        }\r\n\r\n        const _items = list_item(UserMarketItems.Data);\r\n        return (\r\n            <div>\r\n                <div className=\"marketlist\" style={{ padding: 25 }}>\r\n\r\n                    {/* {this.state.ItemId != -1 && (\r\n                        <Modal show={this.state.showEditModal} handleClose={this.hideEditModal}>\r\n                            <Container>\r\n                                <MarketItemUpdate ItemId={this.state.ItemId} />\r\n                            </Container>\r\n                        </Modal>)} */}\r\n\r\n                    <TableContainer component={Paper}>\r\n\r\n                        <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Market</TableCell>\r\n                                    <TableCell align=\"right\">Alınacaklar</TableCell>\r\n                                    <TableCell align=\"right\">Adet</TableCell>\r\n                                    <TableCell align=\"right\">Talebi Açan kişi</TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {_items}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst MapStateToProps = _state => {\r\n\r\n    const { UserMarketItems,} = _state.UserReducer;\r\n\r\n    return { UserMarketItems };\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetMarketItems: (_userId) => _dispatch(UserAction.GetMarketItems(_userId)),\r\n        RemoveMarket:(_item) => _dispatch(UserAction.RemoveMarket(_item))\r\n    }\r\n}\r\n\r\nexport const UserMarketItems = connect(MapStateToProps, MapDispatchToProps)(UserMarketItemsComps);\r\n","C:\\Users\\eyluldeniz.can\\Desktop\\EGBA\\egba-web\\src\\Components\\PrivateRoute.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":1,"column":8,"nodeType":"268","messageId":"269","endLine":1,"endColumn":12},{"ruleId":"266","severity":1,"message":"270","line":3,"column":33,"nodeType":"268","messageId":"269","endLine":3,"endColumn":41},{"ruleId":"266","severity":1,"message":"271","line":3,"column":43,"nodeType":"268","messageId":"269","endLine":3,"endColumn":53},{"ruleId":"266","severity":1,"message":"272","line":3,"column":55,"nodeType":"268","messageId":"269","endLine":3,"endColumn":68},{"ruleId":"262","replacedBy":"273"},{"ruleId":"264","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":14,"column":53,"nodeType":"277","messageId":"278","endLine":14,"endColumn":54,"fix":"279"},{"ruleId":"275","severity":1,"message":"276","line":27,"column":11,"nodeType":"277","messageId":"278","endLine":27,"endColumn":12,"fix":"280"},{"ruleId":"281","severity":1,"message":"282","line":41,"column":1,"nodeType":"283","endLine":41,"endColumn":32},{"ruleId":"281","severity":1,"message":"282","line":1,"column":1,"nodeType":"283","endLine":6,"endColumn":3},{"ruleId":"275","severity":1,"message":"276","line":68,"column":20,"nodeType":"277","messageId":"278","endLine":68,"endColumn":21,"fix":"284"},{"ruleId":"266","severity":1,"message":"285","line":6,"column":10,"nodeType":"268","messageId":"269","endLine":6,"endColumn":22},{"ruleId":"281","severity":1,"message":"282","line":1,"column":1,"nodeType":"283","endLine":13,"endColumn":2},{"ruleId":"266","severity":1,"message":"286","line":3,"column":35,"nodeType":"268","messageId":"269","endLine":3,"endColumn":40},{"ruleId":"266","severity":1,"message":"287","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":24},{"ruleId":"275","severity":1,"message":"276","line":7,"column":34,"nodeType":"277","messageId":"278","endLine":7,"endColumn":35,"fix":"288"},{"ruleId":"275","severity":1,"message":"276","line":17,"column":15,"nodeType":"277","messageId":"278","endLine":17,"endColumn":16,"fix":"289"},{"ruleId":"275","severity":1,"message":"276","line":30,"column":38,"nodeType":"277","messageId":"278","endLine":30,"endColumn":39,"fix":"290"},{"ruleId":"275","severity":1,"message":"276","line":41,"column":15,"nodeType":"277","messageId":"278","endLine":41,"endColumn":16,"fix":"291"},{"ruleId":"275","severity":1,"message":"276","line":53,"column":41,"nodeType":"277","messageId":"278","endLine":53,"endColumn":42,"fix":"292"},{"ruleId":"275","severity":1,"message":"276","line":62,"column":15,"nodeType":"277","messageId":"278","endLine":62,"endColumn":16,"fix":"293"},{"ruleId":"275","severity":1,"message":"276","line":73,"column":40,"nodeType":"277","messageId":"278","endLine":73,"endColumn":41,"fix":"294"},{"ruleId":"275","severity":1,"message":"276","line":81,"column":15,"nodeType":"277","messageId":"278","endLine":81,"endColumn":16,"fix":"295"},{"ruleId":"275","severity":1,"message":"276","line":92,"column":48,"nodeType":"277","messageId":"278","endLine":92,"endColumn":49,"fix":"296"},{"ruleId":"275","severity":1,"message":"276","line":99,"column":15,"nodeType":"277","messageId":"278","endLine":99,"endColumn":16,"fix":"297"},{"ruleId":"281","severity":1,"message":"282","line":106,"column":1,"nodeType":"283","endLine":106,"endColumn":79},{"ruleId":"266","severity":1,"message":"286","line":4,"column":35,"nodeType":"268","messageId":"269","endLine":4,"endColumn":40},{"ruleId":"266","severity":1,"message":"298","line":19,"column":62,"nodeType":"268","messageId":"269","endLine":19,"endColumn":68},{"ruleId":"275","severity":1,"message":"276","line":10,"column":31,"nodeType":"277","messageId":"278","endLine":10,"endColumn":32,"fix":"299"},{"ruleId":"275","severity":1,"message":"276","line":18,"column":11,"nodeType":"277","messageId":"278","endLine":18,"endColumn":12,"fix":"300"},{"ruleId":"275","severity":1,"message":"276","line":32,"column":34,"nodeType":"277","messageId":"278","endLine":32,"endColumn":35,"fix":"301"},{"ruleId":"275","severity":1,"message":"276","line":45,"column":15,"nodeType":"277","messageId":"278","endLine":45,"endColumn":16,"fix":"302"},{"ruleId":"275","severity":1,"message":"276","line":62,"column":35,"nodeType":"277","messageId":"278","endLine":62,"endColumn":36,"fix":"303"},{"ruleId":"275","severity":1,"message":"276","line":71,"column":11,"nodeType":"277","messageId":"278","endLine":71,"endColumn":12,"fix":"304"},{"ruleId":"281","severity":1,"message":"282","line":81,"column":1,"nodeType":"283","endLine":81,"endColumn":56},{"ruleId":"281","severity":1,"message":"282","line":1,"column":1,"nodeType":"283","endLine":11,"endColumn":2},{"ruleId":"266","severity":1,"message":"286","line":3,"column":35,"nodeType":"268","messageId":"269","endLine":3,"endColumn":40},{"ruleId":"305","severity":1,"message":"306","line":38,"column":9,"nodeType":"277","messageId":"307","endLine":38,"endColumn":34,"fix":"308"},{"ruleId":"305","severity":1,"message":"306","line":44,"column":13,"nodeType":"277","messageId":"307","endLine":44,"endColumn":38,"fix":"309"},{"ruleId":"275","severity":1,"message":"276","line":6,"column":44,"nodeType":"277","messageId":"278","endLine":6,"endColumn":45,"fix":"310"},{"ruleId":"275","severity":1,"message":"276","line":14,"column":15,"nodeType":"277","messageId":"278","endLine":14,"endColumn":16,"fix":"311"},{"ruleId":"275","severity":1,"message":"276","line":25,"column":44,"nodeType":"277","messageId":"278","endLine":25,"endColumn":45,"fix":"312"},{"ruleId":"275","severity":1,"message":"276","line":31,"column":15,"nodeType":"277","messageId":"278","endLine":31,"endColumn":16,"fix":"313"},{"ruleId":"305","severity":1,"message":"314","line":37,"column":43,"nodeType":"277","messageId":"307","endLine":37,"endColumn":70,"fix":"315"},{"ruleId":"275","severity":1,"message":"276","line":43,"column":40,"nodeType":"277","messageId":"278","endLine":43,"endColumn":41,"fix":"316"},{"ruleId":"275","severity":1,"message":"276","line":49,"column":15,"nodeType":"277","messageId":"278","endLine":49,"endColumn":16,"fix":"317"},{"ruleId":"275","severity":1,"message":"276","line":59,"column":39,"nodeType":"277","messageId":"278","endLine":59,"endColumn":40,"fix":"318"},{"ruleId":"275","severity":1,"message":"276","line":65,"column":15,"nodeType":"277","messageId":"278","endLine":65,"endColumn":16,"fix":"319"},{"ruleId":"281","severity":1,"message":"282","line":72,"column":1,"nodeType":"283","endLine":72,"endColumn":61},{"ruleId":"266","severity":1,"message":"320","line":15,"column":43,"nodeType":"268","messageId":"269","endLine":15,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":197,"column":32,"nodeType":"323","messageId":"324","endLine":197,"endColumn":34},{"ruleId":"325","severity":1,"message":"326","line":38,"column":13,"nodeType":"327","messageId":"324","endLine":38,"endColumn":15},{"ruleId":"321","severity":1,"message":"328","line":96,"column":33,"nodeType":"323","messageId":"324","endLine":96,"endColumn":35},{"ruleId":"321","severity":1,"message":"322","line":135,"column":38,"nodeType":"323","messageId":"324","endLine":135,"endColumn":40},{"ruleId":"321","severity":1,"message":"328","line":135,"column":64,"nodeType":"323","messageId":"324","endLine":135,"endColumn":66},{"ruleId":"321","severity":1,"message":"322","line":142,"column":42,"nodeType":"323","messageId":"324","endLine":142,"endColumn":44},{"ruleId":"321","severity":1,"message":"328","line":142,"column":68,"nodeType":"323","messageId":"324","endLine":142,"endColumn":70},{"ruleId":"321","severity":1,"message":"322","line":95,"column":36,"nodeType":"323","messageId":"324","endLine":95,"endColumn":38},{"ruleId":"266","severity":1,"message":"329","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":20},{"ruleId":"266","severity":1,"message":"286","line":4,"column":35,"nodeType":"268","messageId":"269","endLine":4,"endColumn":40},{"ruleId":"266","severity":1,"message":"330","line":12,"column":10,"nodeType":"268","messageId":"269","endLine":12,"endColumn":14},{"ruleId":"321","severity":1,"message":"328","line":65,"column":16,"nodeType":"323","messageId":"324","endLine":65,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":1,"column":1,"nodeType":"283","endLine":6,"endColumn":2},{"ruleId":"275","severity":1,"message":"276","line":8,"column":41,"nodeType":"277","messageId":"278","endLine":8,"endColumn":42,"fix":"331"},{"ruleId":"275","severity":1,"message":"276","line":19,"column":15,"nodeType":"277","messageId":"278","endLine":19,"endColumn":16,"fix":"332"},{"ruleId":"275","severity":1,"message":"276","line":31,"column":43,"nodeType":"277","messageId":"278","endLine":31,"endColumn":44,"fix":"333"},{"ruleId":"275","severity":1,"message":"276","line":37,"column":15,"nodeType":"277","messageId":"278","endLine":37,"endColumn":16,"fix":"334"},{"ruleId":"275","severity":1,"message":"276","line":47,"column":33,"nodeType":"277","messageId":"278","endLine":47,"endColumn":34,"fix":"335"},{"ruleId":"275","severity":1,"message":"276","line":53,"column":15,"nodeType":"277","messageId":"278","endLine":53,"endColumn":16,"fix":"336"},{"ruleId":"275","severity":1,"message":"276","line":63,"column":44,"nodeType":"277","messageId":"278","endLine":63,"endColumn":45,"fix":"337"},{"ruleId":"275","severity":1,"message":"276","line":70,"column":15,"nodeType":"277","messageId":"278","endLine":70,"endColumn":16,"fix":"338"},{"ruleId":"275","severity":1,"message":"276","line":80,"column":40,"nodeType":"277","messageId":"278","endLine":80,"endColumn":41,"fix":"339"},{"ruleId":"275","severity":1,"message":"276","line":87,"column":15,"nodeType":"277","messageId":"278","endLine":87,"endColumn":16,"fix":"340"},{"ruleId":"281","severity":1,"message":"282","line":95,"column":1,"nodeType":"283","endLine":95,"endColumn":76},{"ruleId":"266","severity":1,"message":"341","line":57,"column":25,"nodeType":"268","messageId":"269","endLine":57,"endColumn":31},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'BrowserRouter' is defined but never used.",["342"],["343"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"344","text":"345"},{"range":"346","text":"345"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"347","text":"345"},"'AddEducation' is defined but never used.","'Modal' is defined but never used.","'EducationReducer' is defined but never used.",{"range":"348","text":"349"},{"range":"350","text":"349"},{"range":"351","text":"349"},{"range":"352","text":"349"},{"range":"353","text":"349"},{"range":"354","text":"349"},{"range":"355","text":"349"},{"range":"356","text":"349"},{"range":"357","text":"349"},{"range":"358","text":"349"},"'UserId' is assigned a value but never used.",{"range":"359","text":"345"},{"range":"360","text":"345"},{"range":"361","text":"345"},{"range":"362","text":"349"},{"range":"363","text":"345"},{"range":"364","text":"345"},"no-whitespace-before-property","Unexpected whitespace before property GetMarketById.","unexpectedWhitespace",{"range":"365","text":"366"},{"range":"367","text":"366"},{"range":"368","text":"349"},{"range":"369","text":"349"},{"range":"370","text":"349"},{"range":"371","text":"349"},"Unexpected whitespace before property GetAllItemSuccess.",{"range":"372","text":"366"},{"range":"373","text":"349"},{"range":"374","text":"349"},{"range":"375","text":"349"},{"range":"376","text":"349"},"'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'Id'.","ObjectExpression","Expected '===' and instead saw '=='.","'MarketAction' is defined but never used.","'blue' is defined but never used.",{"range":"377","text":"349"},{"range":"378","text":"349"},{"range":"379","text":"349"},{"range":"380","text":"349"},{"range":"381","text":"349"},{"range":"382","text":"349"},{"range":"383","text":"349"},{"range":"384","text":"349"},{"range":"385","text":"349"},{"range":"386","text":"349"},"'button' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[487,498],"\r\n        .",[959,970],[1635,1646],[258,273],"\r\n            .",[598,613],[1043,1058],[1416,1431],[1840,1855],[2098,2113],[2343,2358],[2671,2686],[2990,3005],[3275,3290],[250,261],[474,485],[850,861],[1260,1275],[1664,1675],[1966,1977],[1002,1004],".",[1170,1172],[218,233],[413,428],[669,684],[832,847],[938,940],[1079,1094],[1243,1258],[1484,1499],[1647,1662],[317,332],[717,732],[1082,1097],[1245,1260],[1478,1493],[1668,1683],[1912,1927],[2121,2136],[2369,2384],[2569,2584]]