{"ast":null,"code":"import { toast } from 'react-toastify';\nimport Constant from '../Constants/AuthenticationConstant';\nimport { AuthenticationService } from '../Services/AuthenticationService';\nimport { History } from '../Tools/History';\n\nfunction Success(_user) {\n  return {\n    type: Constant.LoginSuccess,\n    Payload: _user\n  };\n}\n\n_c = Success;\n\nfunction Fail() {\n  return {\n    type: Constant.LoginFail\n  };\n}\n\n_c2 = Fail;\n\nfunction Request() {\n  return {\n    type: Constant.LoginRequest\n  };\n}\n\n_c3 = Request;\n\nconst Login = (_username, _password) => {\n  return _dispatch => {\n    _dispatch(Request());\n\n    AuthenticationService.Login(_username, _password).then(_response => {\n      if (!_response.success) {\n        toast.error(\"Kullanıcı Bulunamadı\");\n        return;\n      }\n\n      localStorage.setItem('user_', _response.data.user.id);\n      localStorage.setItem('token_', _response.data.token);\n\n      _dispatch(Success(_response.data.user));\n\n      History.push(\"/\");\n      console.log(\"Giriş yapılıyor\");\n    }).catch(_error => {\n      console.log(_error);\n\n      _dispatch(Fail());\n    });\n  };\n\n  function Success(_item) {\n    return {\n      type: Constant.LoginSuccess,\n      Payload: _item\n    };\n  }\n};\n\n_c4 = Login;\n\nconst Logout = (_username, _password) => {\n  localStorage.clear(\"user_\");\n  return {\n    type: Constant.Logout\n  };\n};\n\n_c5 = Logout;\nexport default {\n  Login,\n  Logout\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Success\");\n$RefreshReg$(_c2, \"Fail\");\n$RefreshReg$(_c3, \"Request\");\n$RefreshReg$(_c4, \"Login\");\n$RefreshReg$(_c5, \"Logout\");","map":{"version":3,"sources":["C:/Users/eyluldeniz.can/Desktop/EGBA/egba-web/src/Actions/AuthenticationAction.js"],"names":["toast","Constant","AuthenticationService","History","Success","_user","type","LoginSuccess","Payload","Fail","LoginFail","Request","LoginRequest","Login","_username","_password","_dispatch","then","_response","success","error","localStorage","setItem","data","user","id","token","push","console","log","catch","_error","_item","Logout","clear"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAAQC,qBAAR,QAAoC,mCAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAE,SAAO;AAACC,IAAAA,IAAI,EAACL,QAAQ,CAACM,YAAf;AAA6BC,IAAAA,OAAO,EAACH;AAArC,GAAP;AAAoD;;KAArED,O;;AACT,SAASK,IAAT,GAAgB;AAAC,SAAO;AAACH,IAAAA,IAAI,EAACL,QAAQ,CAACS;AAAf,GAAP;AAAkC;;MAA1CD,I;;AACT,SAASE,OAAT,GAAmB;AAAC,SAAM;AAACL,IAAAA,IAAI,EAACL,QAAQ,CAACW;AAAf,GAAN;AAAoC;;MAA/CD,O;;AAGT,MAAME,KAAK,GAAC,CAACC,SAAD,EAAWC,SAAX,KAAyB;AACjC,SAAOC,SAAS,IAAI;AACnBA,IAAAA,SAAS,CAACL,OAAO,EAAR,CAAT;;AAEDT,IAAAA,qBAAqB,CAACW,KAAtB,CAA4BC,SAA5B,EAAsCC,SAAtC,EACIE,IADJ,CACSC,SAAS,IAAI;AACd,UAAG,CAACA,SAAS,CAACC,OAAd,EAAsB;AAClBnB,QAAAA,KAAK,CAACoB,KAAN,CAAY,sBAAZ;AACA;AACH;;AAEDC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BJ,SAAS,CAACK,IAAV,CAAeC,IAAf,CAAoBC,EAAjD;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BJ,SAAS,CAACK,IAAV,CAAeG,KAA7C;;AACAV,MAAAA,SAAS,CAACZ,OAAO,CAACc,SAAS,CAACK,IAAV,CAAeC,IAAhB,CAAR,CAAT;;AACArB,MAAAA,OAAO,CAACwB,IAAR,CAAa,GAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEH,KAbL,EAcIC,KAdJ,CAcUC,MAAM,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;;AACAf,MAAAA,SAAS,CAACP,IAAI,EAAL,CAAT;AACP,KAjBD;AAmBH,GAtBG;;AAuBJ,WAASL,OAAT,CAAiB4B,KAAjB,EAAwB;AAAE,WAAO;AAAC1B,MAAAA,IAAI,EAACL,QAAQ,CAACM,YAAf;AAA4BC,MAAAA,OAAO,EAACwB;AAApC,KAAP;AAAmD;AAC5E,CAzBD;;MAAMnB,K;;AA0BN,MAAMoB,MAAM,GAAE,CAACnB,SAAD,EAAWC,SAAX,KAAuB;AACjCM,EAAAA,YAAY,CAACa,KAAb,CAAmB,OAAnB;AACA,SAAO;AAAC5B,IAAAA,IAAI,EAACL,QAAQ,CAACgC;AAAf,GAAP;AACH,CAHD;;MAAMA,M;AAKN,eAAe;AAAEpB,EAAAA,KAAF;AAASoB,EAAAA;AAAT,CAAf","sourcesContent":["import { toast } from 'react-toastify';\r\nimport Constant from '../Constants/AuthenticationConstant';\r\nimport {AuthenticationService} from '../Services/AuthenticationService';\r\nimport { History } from '../Tools/History';\r\n\r\nfunction Success(_user) { return {type:Constant.LoginSuccess, Payload:_user};}\r\nfunction Fail() {return {type:Constant.LoginFail};}\r\nfunction Request() {return{type:Constant.LoginRequest};}\r\n\r\n\r\nconst Login=(_username,_password) => {\r\n    return _dispatch => {\r\n     _dispatch(Request());\r\n\r\n    AuthenticationService.Login(_username,_password).\r\n        then(_response => {\r\n            if(!_response.success){\r\n                toast.error(\"Kullanıcı Bulunamadı\");\r\n                return;\r\n            }\r\n\r\n            localStorage.setItem('user_',_response.data.user.id);\r\n            localStorage.setItem('token_',_response.data.token);\r\n            _dispatch(Success(_response.data.user));\r\n            History.push(\"/\");\r\n            console.log(\"Giriş yapılıyor\");\r\n            \r\n        }).\r\n        catch(_error => {\r\n            console.log(_error);\r\n            _dispatch(Fail());\r\n    });\r\n\r\n};\r\nfunction Success(_item) { return {type:Constant.LoginSuccess,Payload:_item};}\r\n}\r\nconst Logout =(_username,_password)=>{\r\n    localStorage.clear(\"user_\");\r\n    return {type:Constant.Logout};\r\n}\r\n\r\nexport default { Login, Logout}\r\n"]},"metadata":{},"sourceType":"module"}