{"ast":null,"code":"import Constant from'../Constants/MarketConstant';import{MarketService}from'../Services/MarketService';import{toast}from\"react-toastify\";var GetCurrentMarketList=function GetCurrentMarketList(){return function(_dispatch){MarketService.GetAll().then(function(_response){if(!_response.success){_dispatch(Fail(\"Market Listeleri getirilmedi\"));}_dispatch(Success(_response.data));;}).catch(function(_ex){_dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));});};function Success(_item){return{type:Constant.GetMarketListSuccess,Payload:_item};}function Fail(_item){return{type:Constant.GetMarketListFail,Payload:_item};}};var Add=function Add(_value){return function(_dispatch){MarketService.Add(_value).then(function(_response){if(!_response.success){_dispatch(Fail(\"Liste eklenemedi\"));toast.error(\"Market listesine eklenemedi.\");return;}_dispatch(Success(_response.data));toast.success(\"Market listesine eklendi.\");}).catch(function(_ex){_dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));});};function Success(_item){return{type:Constant.AddMarketListSuccess,Payload:_item};}function Fail(_item){return{type:Constant.AddMarketListFail,Payload:_item};}};var GetMarketById=function GetMarketById(_id){return function(_dispatch){MarketService.GetById(_id).then(function(_response){if(!_response.success){console.log(\"İlgili item getirelemedi\");return;}_dispatch(Success(_response.data));toast.success(\"İlgili talep başarılı bir şekilde getirildi.\");}).catch(function(_ex){console.log(\"Beklenmeyen bir hata oluştu\");});};function Success(_item){return{type:Constant.GetMarketItemByIdSuccess,Payload:_item};}};export default{GetCurrentMarketList:GetCurrentMarketList,Add:Add,GetMarketById:GetMarketById};","map":{"version":3,"sources":["C:/Users/eyluldeniz.can/Desktop/EGBA/egba-web/src/Actions/MarketAction.js"],"names":["Constant","MarketService","toast","GetCurrentMarketList","_dispatch","GetAll","then","_response","success","Fail","Success","data","catch","_ex","_item","type","GetMarketListSuccess","Payload","GetMarketListFail","Add","_value","error","AddMarketListSuccess","AddMarketListFail","GetMarketById","_id","GetById","console","log","GetMarketItemByIdSuccess"],"mappings":"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","sourcesContent":["import Constant from '../Constants/MarketConstant';\r\nimport{ MarketService } from '../Services/MarketService';\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\n\r\n\r\nconst GetCurrentMarketList =()=>{\r\n    return _dispatch =>{\r\n        MarketService.GetAll().\r\n        then(_response=>{\r\n            if(!_response.success){\r\n\r\n                _dispatch(Fail(\"Market Listeleri getirilmedi\"));\r\n            }\r\n            _dispatch(Success(_response.data));\r\n            ;\r\n        }).\r\n        catch(_ex=>{\r\n\r\n            _dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));\r\n\r\n        });\r\n    };\r\n\r\n    function Success(_item) {return {type:Constant.GetMarketListSuccess,Payload:_item};}\r\n    function Fail(_item) {return {type:Constant.GetMarketListFail,Payload:_item};}\r\n}\r\n\r\nconst Add =(_value) =>{\r\n    return _dispatch =>{\r\n        MarketService.Add(_value).\r\n        then(_response => {\r\n                if(!_response.success){\r\n\r\n                    _dispatch(Fail(\"Liste eklenemedi\"));\r\n                    toast.error(\"Market listesine eklenemedi.\");\r\n\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Market listesine eklendi.\");\r\n              \r\n               \r\n            }).\r\n            catch(_ex=>{\r\n                _dispatch(Fail(\"Beklenmeyen bir hata oluştu\"));\r\n\r\n            });\r\n    };\r\n\r\n    function Success(_item) {return{type:Constant.AddMarketListSuccess,Payload:_item}; }\r\n\r\n    function Fail(_item) { return {type:Constant.AddMarketListFail,Payload:_item};  }\r\n\r\n\r\n}\r\n\r\nconst GetMarketById=(_id) =>{\r\n\r\n    return _dispatch =>{\r\n        MarketService.GetById(_id).\r\n        then(_response=>{\r\n            if(!_response.success){\r\n                console.log(\"İlgili item getirelemedi\");\r\n                return;\r\n            }\r\n            _dispatch(Success(_response.data));\r\n            toast.success(\"İlgili talep başarılı bir şekilde getirildi.\");\r\n\r\n        }).\r\n        catch(_ex=>{\r\n            console.log(\"Beklenmeyen bir hata oluştu\");\r\n        })\r\n    }\r\n\r\n    function Success(_item) {return { type:Constant.GetMarketItemByIdSuccess,Payload:_item}; }\r\n}\r\n\r\n\r\nexport default {GetCurrentMarketList,Add,GetMarketById}"]},"metadata":{},"sourceType":"module"}