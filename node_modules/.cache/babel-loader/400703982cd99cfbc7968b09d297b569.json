{"ast":null,"code":"import Constant from '../Constants/UserConstant';\nimport Constants from '../Constants/AuthenticationConstant';\nimport { UserService } from '../Services/UserService';\nimport { toast } from 'react-toastify';\n\nconst GetMarketItems = _userId => {\n  return _dispatch => {\n    UserService.GetAllItems(_userId).then(_response => {\n      if (!_response.success) {\n        _dispatch(Fail(_response.exception));\n\n        toast.error(_response.Exception);\n        return;\n      }\n\n      _dispatch(Success(_response.data));\n\n      toast.success(\"Market listesi getirildi\");\n    }).catch(_e => {});\n  };\n\n  function Success(_value) {\n    return {\n      type: Constant.UserMarketItemsSuccess,\n      Payload: _value\n    };\n  }\n\n  function Fail(_items) {\n    return {\n      type: Constant.UserMarketItemsSuccess,\n      Payload: _items\n    };\n  }\n};\n\n_c = GetMarketItems;\n\nconst GetCourses = _userid => {\n  return _dispatch => {\n    UserService.GetAllCourses(_userid).then(_response => {\n      if (!_response.success) {}\n\n      _dispatch(Success(_response.data));\n    }).catch(_ex => {});\n  };\n\n  function Success(_item) {\n    return {\n      type: Constant.UserCoursesSuccess,\n      Payload: _item\n    };\n  }\n};\n\n_c2 = GetCourses;\n\nconst GetUser = _id => {\n  return _dispatch => {\n    UserService.GetUser(_id).then(_response => {\n      if (!_response.success) {\n        return;\n      }\n\n      _dispatch(Success(_response.data));\n    }).catch(_ex => {});\n  };\n\n  function Success(_item) {\n    return {\n      type: Constants.LoginSuccess,\n      Payload: _item\n    };\n  }\n};\n\n_c3 = GetUser;\n\nconst RemoveMarket = _item => {\n  return _dispatch => {\n    UserService.RemoveMarketItem(_item).then(_response => {\n      if (!_response.success) {}\n\n      _dispatch(Success());\n\n      toast.success(\"Market isteği kaldırıldı.\");\n    }).catch(_ex => {});\n  };\n\n  function Success() {\n    return {\n      type: Constant.RemoveMarketItemSuccess,\n      Payload: _item.id\n    };\n  }\n};\n\n_c4 = RemoveMarket;\n\nconst RemoveCourse = _item => {\n  return _dispatch => {\n    UserService.RemoveCourse(_item).then(_response => {\n      if (!_response.success) {}\n\n      _dispatch(Success());\n\n      toast.success(\"Market isteği kaldırıldı.\");\n    }).catch(_ex => {});\n  };\n\n  function Success() {\n    return {\n      type: Constant.RemoveMarketItemSuccess,\n      Payload: _item.id\n    };\n  }\n};\n\n_c5 = RemoveCourse;\nexport default {\n  GetMarketItems,\n  GetUser,\n  GetCourses,\n  RemoveMarket,\n  RemoveCourse\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetMarketItems\");\n$RefreshReg$(_c2, \"GetCourses\");\n$RefreshReg$(_c3, \"GetUser\");\n$RefreshReg$(_c4, \"RemoveMarket\");\n$RefreshReg$(_c5, \"RemoveCourse\");","map":{"version":3,"sources":["C:/Users/eyluldeniz.can/Desktop/EGBA/egba-web/src/Actions/UserAction.js"],"names":["Constant","Constants","UserService","toast","GetMarketItems","_userId","_dispatch","GetAllItems","then","_response","success","Fail","exception","error","Exception","Success","data","catch","_e","_value","type","UserMarketItemsSuccess","Payload","_items","GetCourses","_userid","GetAllCourses","_ex","_item","UserCoursesSuccess","GetUser","_id","LoginSuccess","RemoveMarket","RemoveMarketItem","RemoveMarketItemSuccess","id","RemoveCourse"],"mappings":"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","sourcesContent":["import Constant from '../Constants/UserConstant';\r\nimport Constants from '../Constants/AuthenticationConstant';\r\nimport { UserService } from '../Services/UserService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst GetMarketItems = (_userId) =>{\r\n    return _dispatch => {\r\n        UserService.GetAllItems(_userId).\r\n            then(_response =>{\r\n                if(!_response.success){\r\n                    _dispatch(Fail(_response.exception));\r\n                    toast.error(_response.Exception);\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n                toast.success(\"Market listesi getirildi\");\r\n                \r\n               \r\n            }).\r\n            catch(_e=>{\r\n                \r\n\r\n            });\r\n    };\r\n    function Success(_value) {return {type:Constant.UserMarketItemsSuccess,Payload: _value};}\r\n    function Fail(_items) {return{type:Constant.UserMarketItemsSuccess, Payload:_items};}\r\n}\r\n\r\nconst GetCourses=(_userid) =>{\r\n    return _dispatch => {\r\n        UserService.GetAllCourses(_userid).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constant.UserCoursesSuccess, Payload:_item};}\r\n}\r\n\r\nconst GetUser=(_id) =>{\r\n    return _dispatch =>{\r\n        UserService.GetUser(_id).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success(_item) {return {type:Constants.LoginSuccess,Payload:_item};}\r\n}\r\n\r\nconst RemoveMarket=(_item)=>{\r\n    return _dispatch =>{\r\n        UserService.RemoveMarketItem(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success())\r\n                toast.success(\"Market isteği kaldırıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success() {return {type:Constant.RemoveMarketItemSuccess,Payload:_item.id};}\r\n}\r\n\r\nconst RemoveCourse=(_item)=>{\r\n    return _dispatch =>{\r\n        UserService.RemoveCourse(_item).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success())\r\n                toast.success(\"Market isteği kaldırıldı.\");\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            });\r\n    };\r\n    function Success() {return {type:Constant.RemoveMarketItemSuccess,Payload:_item.id};}\r\n}\r\n\r\nexport default{GetMarketItems,GetUser,GetCourses,RemoveMarket,RemoveCourse}"]},"metadata":{},"sourceType":"module"}