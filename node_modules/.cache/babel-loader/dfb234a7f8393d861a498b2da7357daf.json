{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyluldeniz.can\\\\Desktop\\\\EGBA\\\\egba-web\\\\src\\\\Pages\\\\AddMarketItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\nimport MarketAction from '../Actions/MarketAction';\nimport MarketItemAction from '../Actions/MarketItemAction';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddMarketItemComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      request: \"\",\n      count: \"\"\n    };\n\n    this.Add = () => {\n      const {\n        request,\n        count\n      } = this.state;\n\n      if (!request && !count) {\n        toast.warning(\"Alanlar boş geçilemez\");\n        return;\n      }\n\n      let addState = {\n        Item: this.state.request,\n        Count: this.state.count,\n        MarketId: this.props.MarketId,\n        UserId: localStorage.getItem(\"user_\")\n      };\n      this.props.AddMarketItem(addState);\n      console.log({\n        Item: this.state.request,\n        MarketId: this.props.MarketId\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.GetMarketById(this.props.MarketId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.MarketId !== this.props.MarketId) {\n      this.props.GetMarketById(this.props.MarketId);\n      this.setState({\n        request: \"\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      MarketItem\n    } = this.props;\n\n    if (!MarketItem.Data) {\n      console.log(\"Data yok\");\n      return \"\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-marketlist\",\n      style: {\n        padding: 70\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: MarketItem.Data.startDate.toString().slice(0, 10),\n            fullWidth: true,\n            disabled: true,\n            label: \"Ba\\u015Flang\\u0131\\xE7 Tarihi\",\n            type: \"date\",\n            name: \"StartDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            fullWidth: true,\n            label: \"Biti\\u015F Tarihi\",\n            type: \"date\",\n            value: MarketItem.Data.finishDate.toString().slice(0, 10),\n            name: \"FinishDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: MarketItem.Data.subject,\n            disabled: true,\n            name: \"Subject\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Market Ad\\u0131\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            value: MarketItem.Data.username,\n            name: \"Username\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Talebi A\\xE7an ki\\u015Fi\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            value: MarketItem.Data.description,\n            name: \"Description\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"A\\xE7\\u0131klama\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.request,\n            onChange: _e => this.setState({\n              request: _e.target.value\n            }),\n            name: \"Item\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"\\u0130stekler\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.count,\n            onChange: _e => this.setState({\n              count: _e.target.value\n            }),\n            name: \"Count\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Adet\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: 20\n            },\n            onClick: this.Add,\n            color: \"primary\",\n            variant: \"contained\",\n            children: \" Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = _state => {\n  const {\n    MarketItem\n  } = _state.MarketReducer;\n  const {\n    AddedMarketItem\n  } = _state.MarketItemReducer;\n  return {\n    MarketItem,\n    AddedMarketItem\n  };\n};\n\n_c = MapStateToProps;\n\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\n  return {\n    GetMarketById: _id => _dispatch(MarketAction.GetMarketById(_id)),\n    AddMarketItem: _data => _dispatch(MarketItemAction.AddMarketItem(_data))\n  };\n};\n\n_c2 = MapDispatchToProps;\nexport const AddMarketItem = connect(MapStateToProps, MapDispatchToProps)(AddMarketItemComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapStateToProps\");\n$RefreshReg$(_c2, \"MapDispatchToProps\");","map":{"version":3,"sources":["C:/Users/eyluldeniz.can/Desktop/EGBA/egba-web/src/Pages/AddMarketItem.js"],"names":["React","Component","connect","TextField","Grid","Button","Modal","MarketAction","MarketItemAction","toast","AddMarketItemComponent","state","request","count","Add","warning","addState","Item","Count","MarketId","props","UserId","localStorage","getItem","AddMarketItem","console","log","componentDidMount","GetMarketById","componentDidUpdate","prevProps","setState","render","MarketItem","Data","padding","startDate","toString","slice","finishDate","subject","username","description","_e","target","value","marginTop","MapStateToProps","_state","MarketReducer","AddedMarketItem","MarketItemReducer","MapDispatchToProps","_dispatch","_ownProps","_id","_data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\nclass AddMarketItemComponent extends Component {\r\n\r\n    state = { \r\n        request: \"\",\r\n        count:\"\"\r\n     }\r\n\r\n    Add = () => {\r\n        const {request, count}=this.state;\r\n\r\n        if(!request && !count){\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n\r\n        }\r\n\r\n        let addState={\r\n            Item: this.state.request,\r\n            Count:this.state.count,\r\n            MarketId:this.props.MarketId,\r\n            UserId:localStorage.getItem(\"user_\")\r\n        }\r\n\r\n        this.props.AddMarketItem(addState);\r\n\r\n        console.log({ Item: this.state.request, MarketId: this.props.MarketId });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props. GetMarketById(this.props.MarketId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.MarketId !== this.props.MarketId) {\r\n            this.props. GetMarketById(this.props.MarketId);\r\n            this.setState({ request: \"\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { MarketItem} = this.props;\r\n\r\n        if (!MarketItem.Data) {\r\n            console.log(\"Data yok\");\r\n            return \"\";\r\n        }\r\n       \r\n        return (\r\n            <div className=\"add-marketlist\" style={{ padding: 70 }}>\r\n                <Grid container spacing={5} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItem.Data.startDate.toString().slice(0, 10)}\r\n                            fullWidth\r\n                            disabled={true}\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            name=\"StartDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={MarketItem.Data.finishDate.toString().slice(0, 10)}\r\n                            name=\"FinishDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField \r\n                        value={MarketItem.Data.subject}\r\n                            disabled={true}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItem.Data.username}\r\n                            name='Username'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Talebi Açan kişi\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItem.Data.description}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <TextField value={this.state.request}\r\n\r\n                            onChange={(_e) => this.setState({ request: _e.target.value })}\r\n                            name='Item'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"İstekler\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField value={this.state.count}\r\n\r\n                            onChange={(_e) => this.setState({ count: _e.target.value })}\r\n                            name='Count'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Adet\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={this.Add} color=\"primary\" variant=\"contained\"> Ekle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n\r\n    const { MarketItem} = _state.MarketReducer;\r\n    const {AddedMarketItem} =_state.MarketItemReducer;\r\n    return { MarketItem,AddedMarketItem};\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetMarketById: (_id) => _dispatch(MarketAction.GetMarketById(_id)),\r\n        AddMarketItem: (_data) => _dispatch(MarketItemAction.AddMarketItem(_data))\r\n    }\r\n}\r\n\r\nexport const AddMarketItem = connect(MapStateToProps, MapDispatchToProps)(AddMarketItemComponent);\r\n"]},"metadata":{},"sourceType":"module"}