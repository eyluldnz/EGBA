{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyluldeniz.can\\\\Desktop\\\\EGBA\\\\egba-web\\\\src\\\\Pages\\\\MarketItemUpdate.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MarketAction from '../Actions/MarketAction';\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\nimport MarketItemAction from '../Actions/MarketItemAction';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MarketItemUpdateComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      request: \"\",\n      count: \"\",\n      loaded: false\n    };\n\n    this.Update = _id => {\n      const {\n        request,\n        count\n      } = this.state;\n\n      if (!request && !count) {\n        toast.warning(\"Alanlar boş geçilemez\");\n        return;\n      }\n\n      let updateState = {\n        Id: _id,\n        Item: this.state.request,\n        Count: this.state.count\n      };\n      this.props.UpdateItem(updateState);\n    };\n  }\n\n  componentDidMount() {\n    this.props.GetItem(this.props.ItemId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.ItemId !== this.props.ItemId) {\n      this.props.GetItem(this.props.ItemId);\n      this.setState({\n        request: \"\"\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // Any time the current user changes,\n    // Reset any parts of state that are tied to that user.\n    // In this simple example, that's just the email.\n    if (!state.loaded && props.MarketItemById && props.MarketItemById.Data) {\n      return {\n        loaded: true,\n        request: props.MarketItemById.Data.item,\n        count: props.MarketItemById.Data.count\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      MarketItemById\n    } = this.props;\n\n    if (!MarketItemById.Data) {\n      console.log(\"Data yok\");\n      return \"\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-marketlist\",\n      style: {\n        padding: 70\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: MarketItemById.Data.startDate.toString().slice(0, 10),\n            fullWidth: true,\n            disabled: true,\n            label: \"Ba\\u015Flang\\u0131\\xE7 Tarihi\",\n            type: \"date\",\n            name: \"StartDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            fullWidth: true,\n            label: \"Biti\\u015F Tarihi\",\n            type: \"date\",\n            value: MarketItemById.Data.finishDate.toString().slice(0, 10),\n            name: \"FinishDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: MarketItemById.Data.subject,\n            disabled: true,\n            name: \"Subject\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Market Ad\\u0131\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            value: MarketItemById.Data.username,\n            name: \"Username\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Talebi A\\xE7an ki\\u015Fi\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            value: MarketItemById.Data.description,\n            name: \"Description\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"A\\xE7\\u0131klama\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: MarketItemById.Data.item,\n            onChange: _e => this.setState({\n              request: _e.target.value\n            }),\n            name: \"Item\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"\\u0130stekler\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.count,\n            onChange: _e => this.setState({\n              count: _e.target.value\n            }),\n            name: \"Count\",\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Adet\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: 20\n            },\n            onClick: () => this.Update(MarketItemById.Data.id),\n            color: \"primary\",\n            variant: \"contained\",\n            children: \" D\\xFCzenle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = _state => {\n  const {\n    MarketItemById\n  } = _state.MarketItemReducer;\n  return {\n    MarketItemById\n  };\n};\n\n_c = MapStateToProps;\n\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\n  return {\n    GetItem: _id => _dispatch(MarketItemAction.GetItem(_id)),\n    UpdateItem: _id => _dispatch(MarketItemAction.UpdateItem(_id))\n  };\n};\n\n_c2 = MapDispatchToProps;\nexport const MarketItemUpdate = connect(MapStateToProps, MapDispatchToProps)(MarketItemUpdateComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapStateToProps\");\n$RefreshReg$(_c2, \"MapDispatchToProps\");","map":{"version":3,"sources":["C:/Users/eyluldeniz.can/Desktop/EGBA/egba-web/src/Pages/MarketItemUpdate.js"],"names":["React","Component","connect","MarketAction","TextField","Grid","Button","Modal","MarketItemAction","toast","MarketItemUpdateComponent","state","request","count","loaded","Update","_id","warning","updateState","Id","Item","Count","props","UpdateItem","componentDidMount","GetItem","ItemId","componentDidUpdate","prevProps","setState","getDerivedStateFromProps","MarketItemById","Data","item","render","console","log","padding","startDate","toString","slice","finishDate","subject","username","description","_e","target","value","marginTop","id","MapStateToProps","_state","MarketItemReducer","MapDispatchToProps","_dispatch","_ownProps","MarketItemUpdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MarketAction from '../Actions/MarketAction';\r\nimport { TextField, Grid, Button, Modal } from '@material-ui/core';\r\nimport MarketItemAction from '../Actions/MarketItemAction';\r\nimport {toast} from 'react-toastify'\r\n\r\nclass MarketItemUpdateComponent extends Component {\r\n\r\n    state = {\r\n        request: \"\",\r\n        count: \"\",\r\n        loaded: false\r\n    }\r\n \r\n\r\n    componentDidMount() {\r\n\r\n        this.props.GetItem(this.props.ItemId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.ItemId !== this.props.ItemId) {\r\n\r\n            this.props.GetItem(this.props.ItemId);\r\n            this.setState({ request: \"\" });\r\n        }\r\n\r\n\r\n    }\r\n    \r\n\r\n    static getDerivedStateFromProps(props,state) {\r\n        // Any time the current user changes,\r\n        // Reset any parts of state that are tied to that user.\r\n        // In this simple example, that's just the email.\r\n        if (!state.loaded && props.MarketItemById && props.MarketItemById.Data) {\r\n\r\n          return {\r\n              loaded: true,\r\n                request: props.MarketItemById.Data.item,\r\n                count:props.MarketItemById.Data.count\r\n          };\r\n        }\r\n        return null;\r\n      }\r\n    Update = (_id) => {\r\n        const {request,count}=this.state;\r\n\r\n        if(!request && !count){\r\n            toast.warning(\"Alanlar boş geçilemez\");\r\n            return;\r\n\r\n        }\r\n\r\n        let updateState = {\r\n            Id: _id,\r\n            Item: this.state.request,\r\n            Count: this.state.count,\r\n        }\r\n\r\n        this.props.UpdateItem(updateState);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { MarketItemById } = this.props;\r\n        if (!MarketItemById.Data) {\r\n            console.log(\"Data yok\");\r\n            return \"\";\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"update-marketlist\" style={{ padding: 70 }}>\r\n\r\n                <Grid container spacing={5} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.startDate.toString().slice(0, 10)}\r\n                            fullWidth\r\n                            disabled={true}\r\n                            label=\"Başlangıç Tarihi\"\r\n                            type=\"date\"\r\n                            name=\"StartDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            fullWidth\r\n                            label=\"Bitiş Tarihi\"\r\n                            type=\"date\"\r\n                            value={MarketItemById.Data.finishDate.toString().slice(0, 10)}\r\n                            name=\"FinishDate\"\r\n\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.subject}\r\n                            disabled={true}\r\n                            name='Subject'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Market Adı\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItemById.Data.username}\r\n                            name='Username'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Talebi Açan kişi\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            disabled={true}\r\n                            value={MarketItemById.Data.description}\r\n                            name='Description'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Açıklama\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <TextField\r\n                            value={MarketItemById.Data.item}\r\n\r\n                            onChange={(_e) => this.setState({ request: _e.target.value })}\r\n                            name='Item'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"İstekler\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n\r\n                            value={this.state.count}\r\n\r\n                            onChange={(_e) => this.setState({ count: _e.target.value })}\r\n                            name='Count'\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Adet\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{ marginTop: 20 }} onClick={()=>this.Update(MarketItemById.Data.id)} color=\"primary\" variant=\"contained\"> Düzenle</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = _state => {\r\n    const { MarketItemById } = _state.MarketItemReducer;\r\n\r\n    return { MarketItemById };\r\n\r\n}\r\n\r\nconst MapDispatchToProps = (_dispatch, _ownProps) => {\r\n    return {\r\n        GetItem: (_id) => _dispatch(MarketItemAction.GetItem(_id)),\r\n        UpdateItem: (_id) => _dispatch(MarketItemAction.UpdateItem(_id))\r\n\r\n    }\r\n}\r\nexport const MarketItemUpdate = connect(MapStateToProps, MapDispatchToProps)(MarketItemUpdateComponent);"]},"metadata":{},"sourceType":"module"}