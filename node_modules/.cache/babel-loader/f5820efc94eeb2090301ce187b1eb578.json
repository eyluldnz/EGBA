{"ast":null,"code":"import Constant from '../Constants/MarketConstant';\nimport { MarketService } from '../Services/MarketService';\n\nconst AddMarketItem = _value => {\n  return _dispatch => {\n    MarketService.AddMarketItem(_value).then(_response => {\n      if (!_response.success) {\n        return;\n      }\n\n      _dispatch(Success(_response.data));\n    }).catch(_ex => {});\n  };\n\n  function Success(_item) {\n    return {\n      type: Constant.AddMarketItemSuccess,\n      Payload: _item\n    };\n  }\n};\n\n_c = AddMarketItem;\n\nconst GetAllItem = _marketId => {\n  return _dispatch => {\n    MarketService.GetAllItem(_marketId).then(_response => {\n      if (!_response.success) {}\n\n      _dispatch(Success(_response.data));\n    }).catch(_ex => {});\n  };\n\n  function Success(_item) {\n    return {\n      type: Constant.GetAllItemSuccess,\n      Payload: _item\n    };\n  }\n};\n\n_c2 = GetAllItem;\n\nconst UpdateItem = _id => {\n  return _dispatch => {\n    MarketService.UpdateItem(_id).then(_response => {\n      if (!_response) {}\n\n      _dispatch(Success(_response.data));\n    }).catch(ex => {});\n  };\n\n  function Success(_data) {\n    return {\n      type: Constant.UpdateMarketItemSuccess,\n      Payload: _data\n    };\n  }\n};\n\n_c3 = UpdateItem;\n\nconst GetItem = _id => {\n  return _dispatch => {\n    MarketService.GetById(_id).then(_response => {\n      if (!_response) {}\n\n      _dispatch(Success());\n    });\n  };\n\n  function Success(_data) {\n    return {\n      type: Constant.GetById,\n      Payload: _data\n    };\n  }\n};\n\n_c4 = GetItem;\nexport default {\n  AddMarketItem,\n  GetAllItem,\n  UpdateItem,\n  GetItem\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AddMarketItem\");\n$RefreshReg$(_c2, \"GetAllItem\");\n$RefreshReg$(_c3, \"UpdateItem\");\n$RefreshReg$(_c4, \"GetItem\");","map":{"version":3,"sources":["C:/Users/eyluldeniz.can/Desktop/EGBA/egba-web/src/Actions/MarketItemAction.js"],"names":["Constant","MarketService","AddMarketItem","_value","_dispatch","then","_response","success","Success","data","catch","_ex","_item","type","AddMarketItemSuccess","Payload","GetAllItem","_marketId","GetAllItemSuccess","UpdateItem","_id","ex","_data","UpdateMarketItemSuccess","GetItem","GetById"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,6BAArB;AACA,SAAQC,aAAR,QAA6B,2BAA7B;;AAEA,MAAMC,aAAa,GAAGC,MAAD,IAAW;AAC5B,SAAOC,SAAS,IAAG;AACfH,IAAAA,aAAa,CAACC,aAAd,CAA4BC,MAA5B,EACIE,IADJ,CACSC,SAAS,IAAG;AAEb,UAAG,CAACA,SAAS,CAACC,OAAd,EAAsB;AAClB;AACH;;AACDH,MAAAA,SAAS,CAACI,OAAO,CAACF,SAAS,CAACG,IAAX,CAAR,CAAT;AAEH,KARL,EASIC,KATJ,CASUC,GAAG,IAAE,CAEV,CAXL;AAYH,GAbD;;AAeA,WAASH,OAAT,CAAiBI,KAAjB,EAAwB;AAAE,WAAO;AAACC,MAAAA,IAAI,EAACb,QAAQ,CAACc,oBAAf;AAAqCC,MAAAA,OAAO,EAACH;AAA7C,KAAP;AAA4D;AACzF,CAjBD;;KAAMV,a;;AAmBN,MAAMc,UAAU,GAAEC,SAAD,IAAc;AAC3B,SAAOb,SAAS,IAAG;AACfH,IAAAA,aAAa,CAACe,UAAd,CAAyBC,SAAzB,EACIZ,IADJ,CACSC,SAAS,IAAE;AACZ,UAAG,CAACA,SAAS,CAACC,OAAd,EAAsB,CAErB;;AACDH,MAAAA,SAAS,CAACI,OAAO,CAACF,SAAS,CAACG,IAAX,CAAR,CAAT;AACH,KANL,EAOIC,KAPJ,CAOUC,GAAG,IAAE,CAEV,CATL;AAUH,GAXD;;AAaA,WAASH,OAAT,CAAiBI,KAAjB,EAAwB;AAAC,WAAO;AAACC,MAAAA,IAAI,EAACb,QAAQ,CAAEkB,iBAAhB;AAAmCH,MAAAA,OAAO,EAACH;AAA3C,KAAP;AAA0D;AAEtF,CAhBD;;MAAMI,U;;AAkBN,MAAMG,UAAU,GAAEC,GAAD,IAAQ;AACrB,SAAOhB,SAAS,IAAG;AACfH,IAAAA,aAAa,CAACkB,UAAd,CAAyBC,GAAzB,EACIf,IADJ,CACSC,SAAS,IAAG;AACb,UAAG,CAACA,SAAJ,EAAc,CAEb;;AACDF,MAAAA,SAAS,CAACI,OAAO,CAACF,SAAS,CAACG,IAAX,CAAR,CAAT;AACH,KANL,EAOIC,KAPJ,CAOUW,EAAE,IAAE,CAET,CATL;AAUH,GAXD;;AAYA,WAASb,OAAT,CAAiBc,KAAjB,EAAwB;AAAC,WAAO;AAACT,MAAAA,IAAI,EAACb,QAAQ,CAACuB,uBAAf;AAAwCR,MAAAA,OAAO,EAACO;AAAhD,KAAP;AAA+D;AAE3F,CAfD;;MAAMH,U;;AAgBN,MAAMK,OAAO,GAAEJ,GAAD,IAAO;AACjB,SAAOhB,SAAS,IAAG;AACfH,IAAAA,aAAa,CAACwB,OAAd,CAAsBL,GAAtB,EACIf,IADJ,CACSC,SAAS,IAAE;AACZ,UAAG,CAACA,SAAJ,EAAc,CAEb;;AACDF,MAAAA,SAAS,CAACI,OAAO,EAAR,CAAT;AACH,KANL;AAOH,GARD;;AASA,WAASA,OAAT,CAAiBc,KAAjB,EAAwB;AAAC,WAAO;AAACT,MAAAA,IAAI,EAACb,QAAQ,CAACyB,OAAf;AAAuBV,MAAAA,OAAO,EAACO;AAA/B,KAAP;AAA8C;AAC1E,CAXD;;MAAME,O;AAYN,eAAe;AAACtB,EAAAA,aAAD;AAAec,EAAAA,UAAf;AAA0BG,EAAAA,UAA1B;AAAqCK,EAAAA;AAArC,CAAf","sourcesContent":["import Constant from '../Constants/MarketConstant';\r\nimport{ MarketService } from '../Services/MarketService';\r\n\r\nconst AddMarketItem =(_value) =>{\r\n    return _dispatch =>{\r\n        MarketService.AddMarketItem(_value).\r\n            then(_response =>{\r\n\r\n                if(!_response.success){\r\n                    return;\r\n                }\r\n                _dispatch(Success(_response.data));\r\n\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n\r\n    function Success(_item) { return {type:Constant.AddMarketItemSuccess, Payload:_item};}\r\n}\r\n\r\nconst GetAllItem=(_marketId) =>{\r\n    return _dispatch =>{\r\n        MarketService.GetAllItem(_marketId).\r\n            then(_response=>{\r\n                if(!_response.success){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(_ex=>{\r\n\r\n            })\r\n    }\r\n\r\n    function Success(_item) {return {type:Constant. GetAllItemSuccess, Payload:_item};}\r\n\r\n}\r\n\r\nconst UpdateItem=(_id) =>{\r\n    return _dispatch =>{\r\n        MarketService.UpdateItem(_id).\r\n            then(_response =>{\r\n                if(!_response){\r\n\r\n                }\r\n                _dispatch(Success(_response.data));\r\n            }).\r\n            catch(ex=>{\r\n\r\n            })\r\n    }\r\n    function Success(_data) {return {type:Constant.UpdateMarketItemSuccess, Payload:_data};}\r\n\r\n}\r\nconst GetItem=(_id)=>{\r\n    return _dispatch =>{\r\n        MarketService.GetById(_id).\r\n            then(_response=>{\r\n                if(!_response){\r\n\r\n                }\r\n                _dispatch(Success())\r\n            })\r\n    }\r\n    function Success(_data) {return {type:Constant.GetById,Payload:_data};}\r\n}\r\nexport default {AddMarketItem,GetAllItem,UpdateItem,GetItem}"]},"metadata":{},"sourceType":"module"}